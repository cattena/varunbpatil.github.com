<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Varun B Patil's blog</title>
<description>Varun B Patil's blog</description>
<link>http://varunbpatil.github.com/</link>

<item>
<title>Linux command line tools and tricks - Part 2</title>
<link>http://varunbpatil.github.com/2012/10/01/linux-tricks-2</link>
<published>2012-10-01T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/10/01/linux-tricks-2</guid>
<description>&lt;p&gt;Hope you enjoyed the first part of my Linux tools and tricks. Here, I give you few more interesting commands and tools for daily use and for fun.&lt;/p&gt;

&lt;h4 id='securely_delete_files_so_that_they_cant_be_recovered'&gt;Securely delete files so that they can&amp;#8217;t be recovered&lt;/h4&gt;

&lt;p&gt;We have all seen movies where federal departments are able to recover data from hard drives of cons. If only they knew how to use linux. Linux allows you to completely destroy previous data by overwriting it with all zeroes/nulls, making it impossible to recover, no matter how much government funding the person trying to recover your data receives. And the process couldn&amp;#8217;t have been more simpler.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ dd if=/dev/zero of=&amp;lt;file_to_delete&amp;gt;;sync;rm -f &amp;lt;file_to_delete&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you remember, we had used the &amp;#8220;dd&amp;#8221; command to create a bootable usb in part 1 of my Linux hacks. There is a special file in linux by the name /dev/zero which contains nothing but zeroes. However, this is not a physical file on disk, and is generated on the fly. So, the file size you are trying to delete securely doesn&amp;#8217;t matter. The &amp;#8220;sync&amp;#8221; command just flushes the output buffers. Up to this step you have only overwritten the file on the disk. You can view it with your favorite editor, but all you will see is junk data. Now it is safe to remove the file using the normal &amp;#8220;rm&amp;#8221; command.&lt;/p&gt;

&lt;h4 id='recording_a_superhigh_quality_screencast_from_the_command_line'&gt;Recording a super-high quality screen-cast from the command line&lt;/h4&gt;

&lt;p&gt;Let us get straight down to business with the command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ ffmpeg -f x11grab -r 30 -s 1366x768 -i :0.0 \
      -vcodec libx264 -vpre lossless_ultrafast \
      -crf 0 -threads 0 /tmp/output.mkv&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looks complicated, but really very easy to break it down.&lt;/p&gt;

&lt;p&gt;-f x11grab tells ffmpeg that the input will be from the x11 windowing system. x11 is simply a standard for GUI.&lt;/p&gt;

&lt;p&gt;-r 30 tells the frame rate which in this case will be 30 fps.&lt;/p&gt;

&lt;p&gt;-s 1366X768 tells the size of the screen to record. Please be sure to specify a resolution suitable for your computer, otherwise you will get an error.&lt;/p&gt;

&lt;p&gt;-i :0.0 tells ffmpeg to record from your display. This is required because there can be multiple monitors attached. This is nothing but the value of a shell variable by the name $DISPLAY. You can say &amp;#8220;$ echo $DISPLAY&amp;#8221; to confirm it on your machine.&lt;/p&gt;

&lt;p&gt;-vcodec specifies the video codecs to use.&lt;/p&gt;

&lt;p&gt;-vpre specifies some video presets&amp;#8230; to make the video recording lossless.&lt;/p&gt;

&lt;p&gt;The other options can be ignored. The last argument is the file name where the screen-cast will be stored.&lt;/p&gt;

&lt;h4 id='using_pushd_and_popd_to_navigate_directories'&gt;Using pushd and popd to navigate directories&lt;/h4&gt;

&lt;p&gt;we are all familiar with the cd command to navigate directories. But power users use something else in addition. They are pushd and popd. The commands and what they do are super simple.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ pushd &amp;lt;dir_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above command will push the present working directory onto a stack and then automatically cd to &amp;#8217;&amp;lt;&amp;#8217;dir_name&amp;#8217;&amp;gt;&amp;#8217;.&lt;/p&gt;

&lt;p&gt;When you are done with the new directory, if you want to get back to the old one, without having to type in the name, you just do&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ popd&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;#8217;s it. You are in your previous working directory. This method can be used to navigate between commonly used directories.&lt;/p&gt;

&lt;p&gt;You can view the current directory stack at any time using the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ dirs -l -p -v&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above command displays the number of the directory on the stack as well. You will notice that, always, the current directory will be on the stack regardless of whether you use pushd or popd. You can use these numbers to cd to a specific directory on the stack like so&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ popd +2   &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will cd to the second directory on the stack(from the top of the stack).&lt;/p&gt;

&lt;p&gt;You can clear the entire contents of the directory stack with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ dirs -c&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='share_any_directory_with_any_user_via_a_web_browser'&gt;Share any directory with any user via a web browser&lt;/h4&gt;

&lt;p&gt;First, cd to the directory that you want to share with others and then enter this simple command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ python -m SimpleHTTPServer&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, ask the other person to open a web browser and enter the URL as follows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;IP_addr_of_your_machine&amp;gt;:8000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can easily find out the IP addr of your machine using the &amp;#8220;$ ifconfig&amp;#8221; command.&lt;/p&gt;

&lt;p&gt;Now the other user should be able to see the contents of your directory and all subdirectories recursively, in a simple text interface.&lt;/p&gt;

&lt;h4 id='translate_an_english_sentence_to_speech_in_other_language_and_play_it_on_your_speakers'&gt;Translate an English sentence to speech in other language and play it on your speakers&lt;/h4&gt;

&lt;p&gt;This is a simple hack which uses Google Translate and google tts(text to speech) to convert any English sentence into another language and play the speech on your computer&amp;#8217;s speakers. The disadvantage at this moment is that Google Translate does not have support for text to speech conversion for many languages. However, for those languages that do have tts support, you can have fun trying them. For example, the following command speaks out the phrase &amp;#8220;I will sleep&amp;#8221; in Russian !!!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ wget -q -O - -U Mozilla \
    &amp;#39;http://translate.google.com/translate_tts?tl=ru&amp;amp;q=I will sleep&amp;#39; \
    | mpg123 -q -&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have seen in Part 1 of Linux tools and tricks that wget is used to download files off the internet. It does the same thing here are well. Only this time, the output wont be written to a file, but to standard output. This is specified using the -O - option. Of course, you would not want some mp3 non-ascii symbols to ruin your terminal. That is why we use the -q option to quiet the wget command. -U specifies the user-agent that the web server will see, or in simple words, the name of the web browser. We are cheating the web server into believing that the request is coming from a Mozilla browser. The parameters following the ? are GET request parameters. One of them is tl which specifies the language you want the sentence translated into. The second GET request parameter is q which specifies the sentence to translate. The order of the parameters may be interchanged without any problem, and you can specify any English sentence and any language(provided that language has tts support) The second GET request parameter is q which specifies the sentence to translate. The order of the parameters may be interchanged without any problem, and you can specify any English sentence and any language(provided that language has tts support). Now, all we are doing is piping the output to another program by the name mpg123 that can play the mp3 stream that it receives from the standard output of wget. You will have to install the mpg123 program on your computer for this hack to work. Happy translating :)&lt;/p&gt;

&lt;h4 id='taking_a_screenshot_when_printscreen_does_not_work'&gt;Taking a screen-shot when print-screen does not work&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    $ chvt 7; sleep 10; import -display :0.0 -window root image.png&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let us break down the command.&lt;/p&gt;

&lt;p&gt;chvt 7 means change to virtual terminal 7. If you have noticed while using linux that there are many virtual terminals that you can access by pressing CTRL-ALT-F1 to CTRL-ALT-F7. CTRL-ALT-F7 is usually the virtual terminal that is running the x11 windowing system. That is where you would want to take your screen-shot.&lt;/p&gt;

&lt;p&gt;sleep 10 means do nothing(sleep) for 10 seconds. This gives you 10 seconds the position the window of which you want the screen-shot to be taken in the foreground. You can adjust this to your liking, just do not make it too low.&lt;/p&gt;

&lt;p&gt;The next command simply imports the contents from your display into a file named image.png in the directory from which you executed the command.&lt;/p&gt;

&lt;p&gt;As in the screen-casts command that you saw previously :0.0 refers to your display. You can see this by typing &amp;#8220;$ echo $DISPLAY&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Simple, and guaranteed way to take a screen-shot no matter which linux box you are using.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;&lt;strong&gt;Stay tuned for more additions to this page.&lt;/strong&gt;&lt;/p&gt;</description>
</item>

<item>
<title>Superb Linux command line tools and tricks for Linux geeks</title>
<link>http://varunbpatil.github.com/2012/09/19/linux-tricks</link>
<published>2012-09-19T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/09/19/linux-tricks</guid>
<description>&lt;p&gt;I have gathered some of the best and most widely used linux command line tools and tricks from all over the web and from my recent Linux System Programming training from Cisco conducted by one of the best teachers I have ever had in quite some time, &lt;a href='http://chandrashekar.info/'&gt;Mr. Chandrashekar Babu&lt;/a&gt;. I use all or most of these commands at work and home frequently. Hope you find it useful and most importantly mind-boggling, fun and interesting, something that will keep you occupied over a long and boring weekend:)&lt;/p&gt;

&lt;h4 id='a_faster_alternative_to_the_find_command'&gt;A faster alternative to the &amp;#8220;find&amp;#8221; command&lt;/h4&gt;

&lt;p&gt;There is a command by the name &amp;#8220;locate&amp;#8221; in Linux that is much faster the super-useful &amp;#8220;find&amp;#8221; command, the reason being that &amp;#8220;locate&amp;#8221; command indexes files before-hand. The disadvantage is that files keep on getting added or removed making &amp;#8220;locate&amp;#8221; unreliable if the indexing is not done regularly.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First index the files on your computer&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo updatedb&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Then, search for a file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ locate -ie &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='downloading_files_using_wget'&gt;Downloading files using &amp;#8220;wget&amp;#8221;&lt;/h4&gt;

&lt;p&gt;&amp;#8220;wget&amp;#8221; is an extremely powerful command line tool to download files off the internet.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download file from a single url with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ wget &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Download only a certain type of files from an URL(say mp3&amp;#8217;s)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ wget -r -A.mp3 &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;You can as well store multiple url&amp;#8217;s to download from in a file(one URL in each line) and give the filename as input to wget&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ wget -i &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;The best feature is that you can resume interrupted downloads by simply using the switch -c with any wget command above&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ wget -c &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;You can also mirror an entire website for offline viewing using the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ wget -rpk &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='an_alternative_to_wget__curl'&gt;An alternative to &amp;#8220;wget&amp;#8221; &amp;#8211; &amp;#8220;curl&amp;#8221;&lt;/h4&gt;

&lt;p&gt;&amp;#8220;curl&amp;#8221; is another powerful tool that works very much similar to &amp;#8220;wget&amp;#8221;. This package doesn&amp;#8217;t come by default. You will have to install it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Download file from a single url with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ curl &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Download from multiple URL&amp;#8217;s with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ curl -O &amp;lt;URL1&amp;gt; -O &amp;lt;URL2&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Resume an interrupted download&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ curl -C &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;And lastly, find the definition of a word with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ curl dict://dict.org/d:&amp;lt;word_to_search_for&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='observing_the_differences_between_two_files_in_a_very_colorful_way'&gt;Observing the differences between two files in a very colorful way&lt;/h4&gt;

&lt;p&gt;We all know the basic diff command to observe the difference between two files, and we also know how hard it is to interpret the result of running the command. This is where vimdiff comes in. It displays the two files side by side in two vim tabs. The obvious disadvantage is that you should know a few commands to navigate around vim. Most importantly, the output is colored, with different colors meaning different things as below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Same lines in both files do not have a background color.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;If a line is missing in one file, it is shown as - - - with a blue background.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Partial line matches are shown in red background.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='splitting_compressing_and_encrypting_files_before_transfering_to_others'&gt;Splitting, compressing and encrypting files before transfering to others&lt;/h4&gt;

&lt;p&gt;We all at some point have had to deal with transferring large files across computers. The obvious method is to compress it before sending. For extremely large files we can create a multi-part archive using the following commands.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First of all, create a zip archive using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ zip -re &amp;lt;compressed_file_name.zip&amp;gt; &amp;lt;file1&amp;gt; &amp;lt;dir1&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The -r switch allows you to add directories to the archive.&lt;/p&gt;

&lt;p&gt;The -e switch allows encryption, where the program asks you to enter a passphrase that needs to be entered by the recepient in order to extract the archive.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Now split the archive into multiple parts with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ split --bytes=1K &amp;lt;compressed_file_name.zip&amp;gt; &amp;lt;PREFIX&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, - -bytes=1K specifies that we want parts that are at most 1K bytes in size.&lt;/p&gt;

&lt;p&gt;PREFIX is any user string&amp;#8230; For example, if the PREFIX is given as &amp;#8220;split_&amp;#8221;, then the files that are created will be named split_aa, split_ab, split_ac, etc.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;On the receiving side, you can extract the multipart zip archive with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ cat split_* &amp;gt; my_compressed_file.zip&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where, &amp;#8220;split_&amp;#8221; was the PREFIX that the person who created the archive specified.&lt;/p&gt;

&lt;p&gt;Then, extract the whole zip file as follows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ unzip my_compressed_file.zip&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='encrypting_a_single_file_using_openssl_for_secure_local_storage'&gt;Encrypting a single file using &amp;#8220;openssl&amp;#8221; for secure local storage&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Encrypt a particular input file with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ openssl enc -aes-256-cbc -e -in &amp;lt;plain_text_file_name&amp;gt; \
    -out &amp;lt;encrypted_file_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will be prompted to enter your password.&lt;/p&gt;

&lt;p&gt;Please also do remember to use the same encryption algorithm which in this case is aes-256-cbc( very secure ), when you want to decrypt the file, although there are several other encryption algorithms that openssl provides. i.e, you have to use the same crypto algorithm for both encryption and decryption of a particular file.&lt;/p&gt;

&lt;p&gt;The -e switch stands for encryption.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;To decrypt a file which was encrypted using openssl use&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ openssl enc -aes-256-cbc -d -in &amp;lt;encrypted_file_name&amp;gt; \
    -out &amp;lt;plain_text_file_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The -d switch stands for decryption.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='performing_spell_check_on_a_file_from_command_line_using_ispell'&gt;Performing spell check on a file from command line using &amp;#8220;ispell&amp;#8221;&lt;/h4&gt;

&lt;p&gt;The program used to perform a very basic spell check from the command line is called &amp;#8220;ispell&amp;#8221;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Run spell check on a given file with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ ispell &amp;lt;file_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, you have several actions that you can take on misspelled words in the file&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Type the number &amp;#8216;n&amp;#8217; to replace the misspelled word with the word against that number.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Type &amp;#8216;R&amp;#8217; to replace the misspelled word with a word that you wish to type in (i.e, which is not there in the numbered list).&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Press spacebar to ignore that misspelled word just once.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Press &amp;#8216;A&amp;#8217; to ignore that misspelled word in this entire ispell session.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;press &amp;#8216;Q&amp;#8217; to quit the program.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='finding_out_the_public_ip_of_a_website'&gt;Finding out the public IP of a website&lt;/h4&gt;

&lt;p&gt;This is useful in cases where your DNS server is unable to resolve the website name into its public IP. This could happen because your ISP which also provides you with the DNS service has blocked that website. I used this technique recently when all Indian ISP&amp;#8217;s where asked to block peer-to-peer sharing sites by the Indian Government. Most of these ISP&amp;#8217;s simply configure their DNS server&amp;#8217;s so as to not resolve the website names of such websites into public IP&amp;#8217;s and thus make them inaccesible, but you can always access such sites using their IP addresses. You could have obtained the IP address of such a site before hand using the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ host &amp;lt;site_url&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or, you could even possibly change the DNS server settings manually by setting it to the address of DNS servers provided by google which is 8.8.8.8. Since Google does not block these file sharing websites, you will be able to get the domain resolved successfully, unless your ISP is really intelligent and is blocking all traffic to such sites.&lt;/p&gt;

&lt;h4 id='how_to_put_a_cpu_to_100_usage'&gt;How to put a CPU to 100% usage&lt;/h4&gt;

&lt;p&gt;This is one of my favorite command line tricks. It allows you to put the CPU to 100% usage. This way you can see how long your laptop battery lasts in the worst case, under heavy load.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cat /dev/urandom &amp;gt; /dev/null&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is something very interesting going on here. /dev/urandom is a file which continuously generated random data. And keep in mind this is not just pseudo random data, it is pure random data, because the way /dev/urandom gets these input is from interrupts in the system like mouse movements, key presses on the keyboard, signals sent to the display, packets arriving over the network and a whole lot of other places which are truly unpredictable by any means.&lt;/p&gt;

&lt;p&gt;This capability gives rise to an other super-cool feature. You can use this file to generate random passwords that are severely hard to crack as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ egrep -ioam1 &amp;#39;[a-zA-Z0-9!@#$%^&amp;amp;*()_+-=]{8}&amp;#39; /dev/urandom&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command generates a random password of 8 characters length. Ofcourse, you can change the number 8 in the regular expression to a larger value to generate longer passwords.&lt;/p&gt;

&lt;p&gt;One thing you will notice that in dual core and quad core CPU&amp;#8217;s, only one of the cores is put to 100% usage and the load is automatically balanced between the available cores. So, if you want to put all the cores of your CPU to 100% usage, make sure you run the first command as many times as the number of cores, by launching multiple terminals simultaneously.&lt;/p&gt;

&lt;p&gt;You can verify the 100% usage of the CPU by using the &amp;#8220;$ top&amp;#8221; command which will display all the processes that are running and the amount of resources that they are using. You should see cat command at the top almost all the time and also see 100% cpu usage when you run the command.&lt;/p&gt;

&lt;p&gt;But, you should also notice that, even when you put all cores to 100% usage by running the command multiple times simultaneously, you will experience very little or no lag in mouse movement or keypress delay&amp;#8230; This is the beauty of Linux, because Linux gives super-high priority to such hardware interrupts. If you were to do something similar on a windows systems, you had better be ready to face robotic mouse and window movements.&lt;/p&gt;

&lt;h4 id='another_way_to_put_your_cpu_to_100_usage'&gt;Another way to put your CPU to 100% usage&lt;/h4&gt;

&lt;p&gt;Here is another way to use Linux&amp;#8217;s super high precision calculator tool &amp;#8220;bc&amp;#8221; to put your CPU to 100% usage. All you need to do is run the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ echo &amp;quot;scale=10000;4*a(1)&amp;quot; | bc -l -q&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All this command is doing is computing the value of PI to 10000 decimal places and dumping it to the standard output. If you don&amp;#8217;t want your standard output clobbered with numbers you won&amp;#8217;t be using anytime in your life, you can redirect the standard output as follows&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ echo &amp;quot;scale=10000;4*a(1)&amp;quot; | bc -l -q &amp;gt; /dev/null&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command gives rise to another very interesting command. You can compare the speeds of your computer and a friends computer and then boast that yours is faster or get a new computer after being humiliated, by running the same command as above, only this time, with the prefix time.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ time echo &amp;quot;scale=10000;4*a(1)&amp;quot; | bc -l -q &amp;gt; /dev/null&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can compare how many seconds (CPU time) the two computers took to calculate the value of PI to 10000 decimal places, which I can promise you is a heck of a lot of time even on my quad core second generation i5 laptop.&lt;/p&gt;

&lt;h4 id='writing_an_iso_image_file_to_a_cdrom_from_the_command_line'&gt;Writing an ISO image file to a CDROM from the command line&lt;/h4&gt;

&lt;p&gt;We usually download .iso images of popular linux distros for installation or as live media, but end up using a GUI cd burning tool to create a bootable cdrom. But, if your feeling a bit geeky, you could try doing so from the command line with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cdrecord -v speed=0 driveopts=burnfree -eject dev=1,0,0 &amp;lt;src_iso_file&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;speed=0 tells the program to write the disk at the lowest possible drive speed, which is good considering the shitty quality of cdroms that we get in India. But, if you are in a hurry, you can try speed=1 or speed=2. Keep in mind that these are relative speeds.&lt;/p&gt;

&lt;p&gt;-eject switch tells the program to eject the cdrom after the operation is complete.&lt;/p&gt;

&lt;p&gt;Now, the most important part&amp;#8230; specifying the device id. It is absolutely important that you specify the device id of your cd rom drive correctly or you may end up writing the iso to some other place on disk and corrupting your entire hard disk. To find out the device id of your cd-rom drive, just run this command prior to running the first command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cdrecord -scanbus&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your cd-roms device id should look something like 1,0,0 but need not be exactly the same on your system.&lt;/p&gt;

&lt;p&gt;Also, note that, you cannot create a bootable dvd disk using this command for distros like openSUSE or Fedora or Ubuntu or Slackware which come as dvd iso&amp;#8217;s. But, do not be disheartened, there is another more simpler command to burn a bootable dvd&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ growisofs -dvd-compat -speed=0 -Z /dev/dvd=myfile.iso&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, /dev/dvd is the device file that represents your dvd rom. It is quite likely to be the same on your system as well.&lt;/p&gt;

&lt;p&gt;Donot use growisofs to burn a cdrom. The beauty of linux is that a single command does a single operation and does it well. So, we will stick to it.&lt;/p&gt;

&lt;h4 id='creating_a_bootable_usb_disk'&gt;Creating a bootable USB disk&lt;/h4&gt;

&lt;p&gt;Now, that you know how to create a bootable cdrom, you have to admit, it is a bit of a pain to buy and burn a cdrom every time you want to try a new linux distro and then wait forever until the OS is installed from the super-slow cd rom. The solution is to create a bootable usb disk and the procedure to create one, assuming you already have a partitioned and formatted pendrive, couldn&amp;#8217;t have been more easier. All you have to do is&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ dd if=mylinux.iso of=/dev/sdb bs=20M&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here if stands for input file, of for output file and bs for block-size.&lt;/p&gt;

&lt;p&gt;After this, make sure you flush the write buffers to disk by issuing the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ sync&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here /dev/sdb is the device file that represents your usb pendrive. It may be different on your system. But it is always something like sdb or sdc. To find out exactly, plug in your usb disk and then run &amp;#8216;$ sudo fdisk -l&amp;#8217;. You should be able to see a partition table for your pendrive at the bottom and also atleast one partition which would be something like sdb1 or sdc1. However, if you haven&amp;#8217;t formatted your pendrive before and want to learn how to do it from the command line, then read the next section.&lt;/p&gt;

&lt;p&gt;If you haven&amp;#8217;t already realized, you can do amazing things with the dd command. You can create a backup of an entire hard disk partition by&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ dd if=/dev/sda1 of=/dev/sda2&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command copied the entire partition sda1 on your hard disk to partition sda2. You can restore the partition simply by interchanging the if and of attributes. However, exercise extreme caution while using the dd command as you can completely mess up your hard drive and lose all data if you specify the if and of attributes wrongly.&lt;/p&gt;

&lt;h4 id='partitioning_and_formatting_a_usb_key'&gt;Partitioning and formatting a USB key&lt;/h4&gt;

&lt;p&gt;I have to admit partitioning and formatting a USB key from the command line is not as easy as right clicking and selecting format. But, I also have to tell you that the command line tool called &amp;#8220;fdisk&amp;#8221; provides unprecedented control over the process, and shouldn&amp;#8217;t be very difficult to get a hang of. First of all, plug in your pendrive and run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ sudo fdisk -l&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note down the device file for your pendrive. It should be something like /dev/sdb or /dev/sdc. Assuming yours is /dev/sdb, run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ sudo fdisk /dev/sdb&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are now into the fdisk program. You can press &amp;#8216;m&amp;#8217; to see a list of all possible commands allowed.&lt;/p&gt;

&lt;p&gt;Supposing you already have a partition on your pendrive you can delete them by pressing &amp;#8216;d&amp;#8217; and then entering the number of the partition.&lt;/p&gt;

&lt;p&gt;If you do not have a partition, you have to create one. To create a new partition, simply press &amp;#8216;n&amp;#8217;. You will be asked whether you want to create a primary or extended partition. Press &amp;#8216;p&amp;#8217; to create a primary partition. You now have to tell, what type of file system you would like to have on the new partition. To do that, press &amp;#8216;t&amp;#8217; and then select &amp;#8216;c&amp;#8217; for a FAT file system. You will be asked whether you want to create a primary or extended partition. Press &amp;#8216;p&amp;#8217; to create a primary partition.&lt;/p&gt;

&lt;p&gt;You now have to tell, what type of file system you would like to have on the new partition. To do that, press &amp;#8216;t&amp;#8217; and then select &amp;#8216;c&amp;#8217; for a FAT file system. You will be asked whether you want to create a primary or extended partition. Press &amp;#8216;p&amp;#8217; to create a primary partition. You now have to tell, what type of file system you would like to have on the new partition. To do that, press &amp;#8216;t&amp;#8217; and then select &amp;#8216;c&amp;#8217; for a FAT file system. You will be asked whether you want to create a primary or extended partition. Press &amp;#8216;p&amp;#8217; to create a primary partition. You now have to tell, what type of file system you would like to have on the new partition. To do that, press &amp;#8216;t&amp;#8217; and then enter &amp;#8216;c&amp;#8217; for a FAT file system. There are several other filesystems supported. You can see a list of all those by pressing &amp;#8216;l&amp;#8217;.&lt;/p&gt;

&lt;p&gt;Note that fdisk will not write the partition table to disk until you explicitly tell it to do so. So, go ahead and enter &amp;#8216;w&amp;#8217; to write the partition table to disk. You can quit the program without saving any changes to disk by pressing &amp;#8216;q&amp;#8217; before you press &amp;#8216;w&amp;#8217;. At this point, you have created a raw partition with no filesystem on it. As such, the pendrive is useless. Run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ sudo eject /dev/sdb&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, unplug the drive and plug it in again. If your linux box supports automounting, you should get an error saying unable to read the disk. This is simply because you have not created any filesystem on the disk. Put in simple words, the disk is not formatted yet. So go ahead and eject the drive using the same command as above.&lt;/p&gt;

&lt;p&gt;Now, format the pendrive as FAT using the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ sudo mkfs.vfat /dev/sdb1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the above command takes the specific partition to be formatted like sdb1 or sdc1, so different partitions on the disk may be formatted as different file systems. That&amp;#8217;s it, you are now ready to create your bootable USB disk using the commands in the previous section.&lt;/p&gt;

&lt;h4 id='ripping_a_cd_or_dvd_for_local_storage'&gt;Ripping a CD or DVD for local storage&lt;/h4&gt;

&lt;p&gt;Sometimes, you need to return a dvd to a friend and you do not have enough time to burn a copy of the dvd or donot have an extra dvd drive that can do the job. Moreover, your USB drive read is much slower that read from disk. So, why not make an exact copy of the entire cd or dvd to your disk which you can view anytime later or burn it to a dvd later. All you have to do is enter the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ dd if=/dev/dvd of=myfile.iso bs=2048&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, if stands for input file. As you already know, every device is a file in Linux. Hence, the dvd drive is represented by /dev/dvd and the cdrom drive most likely by /dev/cdrom. Use the one appropriate for your case.&lt;/p&gt;

&lt;p&gt;As you guessed, of stands for output file which is an exact mirror image of the cd or dvd which you can write to another cd or dvd anytime using the commands in the previous section.&lt;/p&gt;

&lt;p&gt;Now, that you have an iso file on your disk, you cannot simply view it anytime you want. To access the contents of the iso file, you will need to mount it at a particular mount point. So, go ahead and create a mount point&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ sudo mkdir /tmp/myfiles

    $ sudo mount -o ro,loop -t iso9660 myfile.iso /tmp/myfiles

    $ cd /tmp/myfiles&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thats it&amp;#8230; you can now access the files as though you were accessing them from the dvd or cd only much faster. You have to keep in mind that you will not be able to write anything directly into /tmp/myfiles just as you would simply not be able to write into a dvd or cd. Thats the reason, the iso file is mounted as read-only.&lt;/p&gt;

&lt;h4 id='hiding_a_file_or_directory_within_an_image'&gt;Hiding a file or directory within an image&lt;/h4&gt;

&lt;p&gt;This is one severely cool trick which allows you to hide any file or directory within a harmless looking image. When you click on such a file, all you see is the image on your default image viewer. The image is not altered in any way. What you don&amp;#8217;t see is the file you have hidden within the image&amp;#8230;. Here is precisely how to do it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First you will need a harmless looking .png or .jpg image file&amp;#8230; Feel free to download your favorite one from google images.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Now, the file or directory you wish to hide has to be compressed into a zip archive.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ zip -r &amp;lt;compressed.zip&amp;gt; &amp;lt;file1&amp;gt; &amp;lt;dir1&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Now, cat the image you downloaded with the compressed file you created above&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ cat image.png compressed.zip &amp;gt; secret.png&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NOTE: do not change the ordering of the image and the compressed file. The image always has to always come first in the cat command.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Now, remove the files and directories you wanted to hide and also the compressed.zip file using the rm command.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thats it&amp;#8230; You now have a file by the name &amp;#8220;secret.png&amp;#8221; which if you open, will display the harmless looking image file. Nobody suspects that the image is hiding something sinister(unless ofcourse they are intelligent enough to do a ls -l and see the size of the image file)&lt;/p&gt;

&lt;p&gt;Now, all you have to do to get back your secret files and directories is&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ unzip secret.png&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Don&amp;#8217;t worry if you get some weird warnings or errors when you run the command regarding some invalid content in the header. Thats the whole point you see !!! When we catted the image file at the start of the zip file, we inadvertently modified the header of secret.png, and hence the warnings and errors. Nonetheless, you should now see the compressed.zip file in the directory. Just extract its secret contents with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ unzip compressed.zip&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id='how_to_completely_paralyze_any_linux_system_which_is_using_the_bash_shell'&gt;How to completely paralyze any Linux system which is using the bash shell&lt;/h4&gt;

&lt;p&gt;Most linux distros that you use today come preloaded with the bash shell as default, so you wouldn&amp;#8217;t need to worry much to completely wreck your college linux server box or your best friends laptop in a matter of seconds. Just type in the following command, sit back and relax while the system starts to choke itself.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ :(){ :|:&amp;amp; };:&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is one of the most cryptic commands you have probably ever seen and also one of the shortest ones considering the amount of carnage you are about to cause as soon as you press the enter key. But the command is really very simple to understand. So, here is the breakup of the command.&lt;/p&gt;

&lt;p&gt;This command is creating a bash function by the name &amp;#8217;:&amp;#8217; , hence you see :()&lt;/p&gt;

&lt;p&gt;The body of this bash function is within the curly braces { }&lt;/p&gt;

&lt;p&gt;What we are doing within this function is calling the same function &amp;#8217;:&amp;#8217; again. Kinda like recursion. And this function call is running in the background. Thats the reason you see the ampersand (&amp;amp;) at the end. In short, this function is telling bash to keep on forking an innumerable number of child processes. But, this is just the function definition, no harm here. The actual fun starts after the semicolon(;) which as you know acts as a seperator between two linux commands. The first command was merely writing the function definition. But the &amp;#8217;:&amp;#8217; you see after the semicolon is the command that is actually calling the function &amp;#8217;:&amp;#8217;.&lt;/p&gt;

&lt;p&gt;All hell is let loose on the system. Bash starts to fork child processes that grow exponentially. Within a matter of seconds, you will have millions of child processes on your system, and every system can only take so much. The system is in effect, choking itself, and in seconds, your system is completely lifeless&amp;#8230;. mouse doesn&amp;#8217;t work, keypresses don&amp;#8217;t do anything&amp;#8230; So you cannot even press Ctrl+C to stop the system from killing itself. All you can do at this point, is to hold down the power button for some time to hard-reboot the system. And the really funny and interesting about this command is that, the more processing power your system has, the faster it will kill-itself because it is creating child processes at a much faster rate that a slow, dim-witted computer where you might even have time to press Ctrl+C after you have realized your mistake. Now, you don&amp;#8217;t call this command the &amp;#8220;bash fork bomb&amp;#8221; for no reason.&lt;/p&gt;

&lt;p&gt;This goes without saying that &amp;#8220;With great power comes great responsibility&amp;#8221; :P&lt;/p&gt;

&lt;h4 id='some_random_supercool_command_line_fu'&gt;Some random, super-cool command line fu&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A stopwatch on the terminal&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ time read&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will start a stopwatch on your terminal. Simply press Ctrl+D to stop the timer and see the elapsed time.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to know how many CPU cores are there on the computer ?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo cat /proc/cpuinfo | grep processor | wc -l&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Infact, you can see a lot of info about each of these cores with the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo cat /proc/cpuinfo&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Finding the name of the linux distro running on the computer&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo cat /etc/issue&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to know whether you have a 32bit or 64bit OS running on your computer ?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo getconf LONG_BIT&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Killing a process that has locked a particular file, when you know the file name that is locked, but don&amp;#8217;t know which process is locking it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo fuser -k &amp;lt;file_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is useful when you get an error saying this particular file is locked by another process. This happens many times when you are updating your linux installation and the process got terminated leaving the /var/lib/dpkg/cache file locked. You get an error when you try to re-start the system update again. You can use this command in such situations.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Easiest way to re-run the previous command with superuser permissions&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo !!&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This saves you from pressing up arrow and then home key and then typing sudo.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Easily doing a reverse search for a command you entered previously. In bash, simply press Ctrl+R and then start typing the part of the comamnd you remember. Hit enter when you find the command you were looking for. This command gives rise to another neat trick. Suppose you use a lengthy command very frequently during the session. The first time you run the long command, run it as follows&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ &amp;lt;command&amp;gt; #my_label&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The next time you want to run the same command, all you have to do is press Ctrl+R to start reverse-search and then enter &amp;#8220;my_label&amp;#8221; followed by enter key&amp;#8230; How cool is that !!!.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to get vi stlye editing commands working in bash&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ echo &amp;quot;set editing-mode vi&amp;quot; &amp;gt; ~/.inputrc&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;some super useful bash command editing keys&lt;/p&gt;

&lt;p&gt;- Press Ctrl+W to erase a single word before the current cursor position.&lt;/p&gt;

&lt;p&gt;- Press Ctrl+U to erase the entire line before the current cursor position.&lt;/p&gt;

&lt;p&gt;- Press Ctrl+K to erase the entire line after the current cursor position.&lt;/p&gt;

&lt;p&gt;- Press Ctrl+A to go to the beginning of the command.&lt;/p&gt;

&lt;p&gt;- Press Ctrl+E to go the the end of the command.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to display a popup notification when a command completes ( requires libnotify to be installed )&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ wget &amp;lt;URL&amp;gt; ; notify-send &amp;quot;wget&amp;quot; &amp;quot;your download is complete&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above command displays a popup notification once wget finishes downloading the file. wget can be replaced by any command actually. The first argument to the notify-send command is the &amp;#8220;title&amp;#8221; and the second argument is the &amp;#8220;body&amp;#8221; of the popup notification. You can change it to whatever you like.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Turning of the monitor to save power when there is no hardware key available to do so(say, on a laptop)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ xset dpms force off&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to copy the output of any command directly to the system clipboard&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ &amp;lt;command&amp;gt; | xsel --clipboard&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to open an file from the command line using the default application for that file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ xdg-open &amp;lt;file_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to save the output of any command as an image file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ &amp;lt;command&amp;gt; | convert label:@- &amp;lt;image_name.png&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to convert an entire man page into pdf format for later viewing&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ man -t &amp;lt;command_name&amp;gt; | ps2pdf - &amp;lt;command_name.pdf&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Installing the same packages and software you already have on a fully configured linux system, on another freshly installed linux system in a single command&lt;/p&gt;

&lt;p&gt;First, run this command on the fully configured linux box&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo dpkg --get-selections &amp;gt; my_linux_software&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, transfer this file to the freshly installed linux box an enter the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ cat may_linux_software | sudo dpkg --set-selections &amp;amp;&amp;amp; sudo dselect install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ofcourse, you will need network connection on your freshly installed linux box, but you will be saved from laboriously selecting all your favorite software from the software management tool.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Deleting a particular line number from a given file without opening it in any editor&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sed -i 8d &amp;lt;file_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command deletes the 8th line from the specified file.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Running a command at a specified time&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ echo &amp;quot;command you want to run | at 01:00&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the time is in 24hr format.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to create a pencil sketch out of any image file&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ convert &amp;lt;input_image&amp;gt; -colorspace gray \( +clone -blur 0x2 \) \
    +swap -compose divide -composite -linear-stretch 5%x0% &amp;lt;output_image&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can ofcourse add an alias or better still, a bash function for such long commands in your ~/.bashrc to make your life easier.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;How to check unread mail from your gmail inbox from the command line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ curl -u your_email@gmail.com:your_password --silent \
    &amp;quot;https://mail.google.com/mail/feed/atom&amp;quot; | tr -d &amp;#39;\n&amp;#39; | \
    awk -F &amp;#39;&amp;lt;entry&amp;gt;&amp;#39; &amp;#39;{for (i=2; i&amp;lt;=NF; i++) {print $i}}&amp;#39; | \
    sed -n &amp;quot;s/&amp;lt;title&amp;gt;\(.*\)&amp;lt;\/title&amp;gt;&amp;lt;summary&amp;gt;\(.*\)&amp;lt;\/summary.*name&amp;gt;\
    \(.*\)&amp;lt;\/name&amp;gt;&amp;lt;email&amp;gt;\(.*\)&amp;lt;\/email&amp;gt;.*/\n\3\(\4\) - \1 - \2\n/p&amp;quot;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command might look like too much to handle, but it is really extremely simple. All it is doing is reading from your gmail account&amp;#8217;s atom feed and formatting the output using awk and sed. As before, you are better of creating an alias(or a bash function) in your ~/.bashrc for this command.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='a_supersimple_chat_program_that_you_can_run_from_the_command_line'&gt;A super-simple chat program that you can run from the command line&lt;/h4&gt;

&lt;p&gt;You will need to install &amp;#8220;netcat&amp;#8221; on your linux box for this to work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open a terminal on Computer A and type in&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ nc -l 12345&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Also note down the IP addr of Computer A by running the &amp;#8220;ifconfig&amp;#8221; command. Let us say, the IP addr of Computer A is a.b.c.d&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Now, open a terminal on another Computer B which also has &amp;#8220;netcat&amp;#8221; installed and type in&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ nc a.b.c.d 12345&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here, 12345 is simply a port number. You can specify anything you want as long as it is not already in use.&lt;/p&gt;

&lt;p&gt;Thats it&amp;#8230; You have a chat program running. Type anything and press enter, it will be immediately visible on the other computer. To test this out you might as well run the two commands on two different terminals on the same computer, in which case, you will have to replace the IP addr a.b.c.d by the simple string &amp;#8220;localhost&amp;#8221;.&lt;/p&gt;

&lt;h4 id='the_fastest_way_to_transfer_files_from_computer_a_to_computer_b_over_the_network_from_the_command_line'&gt;The fastest way to transfer files from Computer A to Computer B over the network from the command line&lt;/h4&gt;

&lt;p&gt;You will need &amp;#8220;netcat&amp;#8221; installed for this to work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;On Computer A with ip addr a.b.c.d, run the command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ tar -cf - /path/to/dir | \
    pv -s $(du -sb /path/to/dir | awk &amp;#39;{print $1}&amp;#39;) | \
    nc -l 12345&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;On computer B, run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ nc a.b.c.d 12345 | pv |tar -xf -&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All we are doing here is tarring the directory we want to transfer and then using netcat to transfer the file over the network. Note that there are actually no intermediate archives that are created either on Computer A or Computer B.&lt;/p&gt;

&lt;p&gt;The pv command in the middle is only there to show you a progress bar of how much data is left to be transferred. This can be useful for large files. But you can always competely remove it from both of the above commands and still work correctly. Only thing is you won&amp;#8217;t have any feedback until the entire directory is transferred. Note that pv is not available as default on most linux boxes. You will have to install it.&lt;/p&gt;

&lt;p&gt;You may be wondering why do we need to perform a tar when we are simply transferring a single file instead of a directory. The answer is you don&amp;#8217;t. To transfer a single file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;On Computer A you will run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ cat /path/to/file | nc -l 12345&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;To receive the file on Computer B, you would run,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ nc a.b.c.d 12345 &amp;gt; myfile&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As simple as that!!!.&lt;/p&gt;

&lt;p&gt;A word of caution. On some computers with different version of netcat installed, you will need to replace the command &amp;#8220;nc -l 12345&amp;#8221; with &amp;#8220;nc -l -p 12345&amp;#8221; for netcat to work correctly. All other commands remain same.&lt;/p&gt;

&lt;h4 id='how_to_get_a_progress_bar_while_copying_huge_files'&gt;How to get a progress bar while copying huge files&lt;/h4&gt;

&lt;p&gt;Normally cp command does not give you any output while you are copying files. You have no idea how much copying is left to be done. However you can use a slightly different command to copy large with a progress bar shown. As you might have guessed, the solution is to use &amp;#8220;pv&amp;#8221; command described in the previous section.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ cat originalfile.txt | pv &amp;gt; newfile.txt&lt;/code&gt;&lt;/pre&gt;
&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Wuff&amp;#8230; this is one huge article, but one which I enjoyed writing and one I hope you will enjoy executing. I have at some point used all of these commands in my day to day work. It is very likely that you may get errors saying command not found while executing some of these commands, because you don&amp;#8217;t have the necessary packages installed. You can always install them and continue playing or you can leave a comment below and I will help you get it working. Enjoy Linux :) :) and stay tuned for more comprehensive articles on specific Linux tools like vim, ssh, scp, rsync, git version control system and more in the future.&lt;/p&gt;

&lt;p&gt;Once again I sincerely thank &lt;a href='http://chandrashekar.info/'&gt;Mr. Chandrashekar Babu&lt;/a&gt; for his superb linux training classes at Cisco and for enlightening us about some of the above Linux command line tricks.&lt;/p&gt;</description>
</item>

<item>
<title>How to go back to stock rom on Motorola Defy</title>
<link>http://varunbpatil.github.com/2012/08/26/stock-defy</link>
<published>2012-08-26T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/08/26/stock-defy</guid>
<description>&lt;p&gt;I have always loved custom ROM&amp;#8217;s like the Cyanogenmod and MIUI. I like to be on the bleeding edge. Once I got my hands at the ICS and JB rom&amp;#8217;s by Cyanogenmod, I never thought I&amp;#8217;d look back. I never thought I&amp;#8217;d have to ever again go back to stock Motorola defy Froyo ROM. But, I was wrong. Recently, on one of my regular Cyanogenmod JB nightly(Quarx&amp;#8217;s build) updates, my phone restarted in the middle of the update and that was it&amp;#8230; GONE !!!. The phone did not boot and when I tried clearing the cache, I got some weird errors. I couldn&amp;#8217;t get access to the SDcard on the phone&amp;#8230; Even wiping data and clearing dalvik cache did not help&amp;#8230; I really thought I had bricked my phone, but then after some frantic google searches on the XDA developers forum, I learnt that bricking a motorola defy is really hard, thanks to the locked bootloader on the motorola defy.&lt;/p&gt;

&lt;p&gt;Then I heard several such cache errors being reported and several solution to the same, the most recommended of which was to go back to stock ROM by using a tool called RSDLite and without a doubt, it worked flawlessly and the procedure couldn&amp;#8217;t have been easier. Here are all the steps you need to go back to stock ROM on motorola defy(if you have had any cache errors and unable to boot up). I have even given the steps to once again flash your favourite custom ROM after re-rooting your defy, if you are one of those people who cannot live without the custom ROM, but only need the stock ROM as a way to recover from the horrifying errors.&lt;/p&gt;

&lt;h4 id='what_you_will_need_before_you_start'&gt;What you will need before you start&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Download &lt;strong&gt;RSDLite&lt;/strong&gt; from &lt;a href='http://forum.xda-developers.com/attachment.php?attachmentid=835334&amp;amp;d=1325246927'&gt;here&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;Make sure your computer can recognize your defy&amp;#8230; make sure you have the &lt;strong&gt;motorola defy drivers&lt;/strong&gt; installed on your windows system. You can download the drivers &lt;a href='http://forum.xda-developers.com/attachment.php?attachmentid=525694&amp;amp;d=1298502477'&gt;here&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;Download the correct &lt;strong&gt;&amp;#8220;.sbf&amp;#8221; file&lt;/strong&gt; for your motorola defy from &lt;a href='http://forum.xda-developers.com/showthread.php?t=966537'&gt;here&lt;/a&gt;. This is the most overwhelming aspect of it all, with so many .sbf file versions out there for the taking and warnings everywhere regarding the consequences of flashing a wrong sbf file. At this point it pays to remember which version of Android your phone had when you bought it and whether it came loaded with Motoblur or not. I had bought my Motorola defy in India and had come with Froyo and without motoblur&amp;#8230; So the sbf file I downloaded is &lt;a href='JRDNEM_U3_3.4.2_179-002_DEBLUR_SIGN_SIGNED_UCAJRDNEMARAB1B80AA03A.0R_PDS03C_USAJRDNFRYORTCEE_P016_A016_HWp3_Service1FF.sbf'&gt;here&lt;/a&gt;.&lt;/li&gt;

&lt;li&gt;If you want to re-root your phone and flash a Custom ROM again!!!, you will need &lt;a href='http://depositfiles.com/files/n0dcxce3t'&gt;SuperOneClick&lt;/a&gt; and &lt;a href='http://www.4shared.com/file/PbVxYsPx/sndinitdefy__23_.html'&gt;SndInitDefy&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='procedure_to_go_back_to_stock_on_motorola_defy'&gt;Procedure to go back to stock on Motorola defy&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Power off&lt;/strong&gt; your phone.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Press and hold the volume down&lt;/strong&gt; button while booting. You will see a triangle with an exclamation mark on the screen.&lt;/li&gt;

&lt;li&gt;Now press both the volume up and volume down buttons &lt;strong&gt;simultaneously&lt;/strong&gt;.&lt;/li&gt;

&lt;li&gt;At the screen that comes up, &lt;strong&gt;wipe cache and wipe data&lt;/strong&gt; and factory reset. Don&amp;#8217;t worry if you get cache errors here.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Reboot&lt;/strong&gt; the phone once again, this time while keeping the &lt;strong&gt;volume up button depressed&lt;/strong&gt;.&lt;/li&gt;

&lt;li&gt;You will enter a screen with white text on a black background, saying something like, USB connection or something.&lt;/li&gt;

&lt;li&gt;Now connect your phone to the computer via the USB cable, and you should see a change in the text displayed&amp;#8230; something like USB connected.&lt;/li&gt;

&lt;li&gt;This means that your phone has been detected by the computer and you have the right motorola drivers for your phone.&lt;/li&gt;

&lt;li&gt;Now &lt;strong&gt;launch RSDLite&lt;/strong&gt; (you will have to install it first on your computer). There should be one line in the progress display area that shows some info about the current status of your phone. If this line is not there, it means your device is not detected by the computer. Try reinstalling the defy drivers.&lt;/li&gt;

&lt;li&gt;Now it is time to &lt;strong&gt;select the .sbf file&lt;/strong&gt; that you downloaded earlier. To do this, click on the &amp;#8221;&amp;#8230;&amp;#8221; button in RSDLite and select the .sdf file from your computer&amp;#8217;s filesystem.&lt;/li&gt;

&lt;li&gt;Now &lt;strong&gt;click on start&lt;/strong&gt;. The process of flashing the stock ROM will begin. The progress display area will show the percentage completion of the process.&lt;/li&gt;

&lt;li&gt;Sit back and relax. Your phone will be alright afterall. Wait till it says &amp;#8220;executed : 100%&amp;#8221;, but do not disconnect the phone or exit the program.&lt;/li&gt;

&lt;li&gt;Now the phone will automatically reboot and continue the process of flashing.&lt;/li&gt;

&lt;li&gt;Wait till the whole process completes and you see a &lt;strong&gt;&amp;#8220;Finished&amp;#8221; and &amp;#8220;Pass&amp;#8221;&lt;/strong&gt; in the results area.&lt;/li&gt;

&lt;li&gt;That was it&amp;#8230; Congratulations!!! You now have stock defy ROM on your phone. Now you can heave a sigh of relief knowing that you have not bricked your phone.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='rerooting_and_reinstalling_your_favorite_custom_rom'&gt;Re-rooting and re-installing your favorite custom ROM&lt;/h4&gt;

&lt;p&gt;This is for all those impatient people who want to get back to their favorite Custom ROM and only needed the stock ROM flashing to get rid of those terrifying cache errors. As usual, it is very simple, so read on&amp;#8230;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The program I use to root my Motorola defy is &lt;strong&gt;SuperOneClick&lt;/strong&gt;, which you would have downloaded from the pre-requisites section above. Make sure you have &lt;strong&gt;enabled USB Debugging on your phone&lt;/strong&gt; after you have flashed the Stock Motorola defy ROM following the steps above. Launch the SuperOneClick program, connect your phone to the computer via USB and &lt;strong&gt;click on the &amp;#8220;ROOT&amp;#8221;&lt;/strong&gt; button at the top left corner of the SuperOneClick program. The rooting process will start. At some point, it will prompt you whether you would like to install BusyBox on your phone. Click on YES. The phone will reboot a couple of times during the process&amp;#8230; Nothing to worry there. At the end of the rooting procedure you will be prompted whether you would like to test the root&amp;#8230; Click on YES. That&amp;#8217;s it&amp;#8230; Your phone is rooted. You can close the SuperOneClick program.&lt;/li&gt;

&lt;li&gt;Now that you have root on your phone, you have to &lt;strong&gt;install 2ndinit and recovery&lt;/strong&gt; which will allow you to flash any custom ROM, that you so loved before you were brought down to your knees by the cache errors!!!.&lt;/li&gt;

&lt;li&gt;Transfer the SndInitDefy.apk file that you downloaded earlier to your phone&amp;#8217;s sdcard and install it like any other android app using the native file manager or any other file manager like ASTRO or ES File Explorer from the android market. To do this, however you will have to &lt;strong&gt;enable installing 3rd party apps&lt;/strong&gt;. This option is available in the Developer&amp;#8217;s section in the settings screen. If you are feeling very geeky, you can as well use ADB to install the app with the command &amp;#8220;adb install SndInitDefy.apk&amp;#8221;. Now that you have installed the SndInitDefy app, launch it from your phone and select to &lt;strong&gt;download and install recovery&lt;/strong&gt;. That&amp;#8217;s it&amp;#8230; You can now boot into recovery and flash your favorite Custom ROM just like you have done a gazillion times before :)&lt;/li&gt;
&lt;/ul&gt;</description>
</item>

<item>
<title>Good holiday reads</title>
<link>http://varunbpatil.github.com/2012/07/24/holiday-reading</link>
<published>2012-07-24T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/07/24/holiday-reading</guid>
<description>&lt;p&gt;In the brief holidays I had after completing my B.E and before joining my full time job at Cisco, Bangalore, I managed to catch up on my old favorite pastime &amp;#8211; reading. Here are a couple of books I read which immediately topped my all time favorites. Interestingly, both of them are autobiographies.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Man In The White Suit (An autobiography by Ben Collins)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To those who are one among the 3 million T.V viewers of &lt;em&gt;Top Gear U.K&lt;/em&gt; (a car show), the name sounds familiar. Of course, for me, this book had been top priority for some time. Ben Collins was in the news not long ago, with BBC, the news corporation that airs Top Gear U.K, trying hard in the courts to block the release of Ben Collins&amp;#8217; book. There was good reason for doing so. A character called the &lt;strong&gt;Stig&lt;/strong&gt; in the show has always been surrounded by anonymity and secrecy. Nobody knows the identity of the Stig, not even the famous presenters of the show themselves, let alone the viewers and the paparazzi. His identity is known only to a select few &amp;#8211; the &amp;#8220;inner circle&amp;#8221; of Top Gear production. This is what has added to the charm of the current version of the show, with an unknown character blitzing aroung race tracks around the world in some of the fastest cars on the planet. It has always been like this, ever since Top Gear was revived in the late 90&amp;#8217;s after being scrapped by BBC for not generating enough viewers. Now, Top Gear is the most watched television program on the planet, and its presenters are some of the top paid television presenters in the BBC. There have only been three Stig&amp;#8217;s in the show, including the current one. The first one a.k.a Black Stig (for the color of the race suit he wore) was literally thrown out of Top Gear for revealing his identity to the media. No wonder, Ben Collins, the second of the breed, a.k.a white Stig was shown the door as well. Considering how important concealing the Stig&amp;#8217;s identity was to the BBC and to Top Gear, it is clear why they went to such great lengths to prevent the release of the book, where Ben Collins reveals everything about his life as the Stig. A lot of people including die hard Top Gear fans hate Ben Collins for making the move, because they think he did it for financial gains. But the book reveals so much about Ben Collins and his life that making such claims sounds so absurd.&lt;/p&gt;

&lt;p&gt;Ben Collins starts out in the book about how his love of cars was handed down to him by his father. He recalls how he got into professional racing, which was not through go-karting which is considered by many as the first place to start a professional racing career. He talks about his days in the British army. He gives vivid details about his arduous army training, how he passed at the top of his class and how it has helped him immensely in life and most importantly racing. Then, he talks about his first audition with Top Gear U.K, where he was asked to drive around the Top Gear test track, and in just 6 laps, was able to beat F1 legend Nigel Mansel&amp;#8217;s time around the same track, in the same car. The previous Stig (black Stig) could only keep his identity secret for two years. Ben Collins kept his for 8 years. He talks about how difficult it was to keep everyone guessing for 8 years, and how his identity was all but revealed and he could no longer hold onto it. He speaks about how difficult it was to hide beneath his white suit and tinted helmet, careful not to utter a single word while 3 million viewers worldwide were itching to find out who the Stig was. He talks about his racing career in Formula 3, then Formula 2 and despite how he consistently beat some of the best names in racing, wasn&amp;#8217;t able to land a full time racing contract with any company, and even in those that he got, finances were lacking and reliability was a major hindrance in making his presence known. He talks about his glory days in NASCAR alongside some of the current F1 names like Mark Webber and Takuma Sato. Then, he goes on to describe his favorite form of motorsport &amp;#8211; Le Mans. He describes how his military training and fitness helped him in the 24 hour endurance race of Le Mans and how difficult Le Mans actually is compared to the way normal people see it as. This infact reminded me of this particular Top Gear episode where the three presenters are competing in a British 24 hour endurance race in a second hand BMW 3 series diesel against purpose-built racing machines, and how the presenters with no racing pedigree are struggling to keep pace with the competitors, and how Ben Collins single handedly drives the entire night passing more powerful cars and finishing 3rd in class overall. Amazing feat!!!. He also gives vivid details about how the entire Top Gear team including the production team, presenters and camera crew work tirelessly to create a 1hr show that is loved by so many. He gives special credit to the fearless camera crew who he says, stand within feet of supercars travelling at over 100mph just to get the best shot. He also shares his experiences in filming Top Gear at some of the most exotic locations on earth in some of the most desirable cars on the planet. He then describes his transition to stunt driving in some of the best hollywood movies like Nicholas Cage&amp;#8217;s &amp;#8220;National Treasure&amp;#8221;, Daniel Craig&amp;#8217;s &amp;#8220;Quantum of Solace&amp;#8221; (the chase scene in the tunnel near lake Garda, Italy, in an Aston Martin DBS, at the very start of the film). Ben Collins even did stunt driving for the latest blockbuster &amp;#8220;The Dark Knight Rises&amp;#8221;. Ben Collins currently owns a company that specializes in stunt driving and is also the chief driving instructor for the British Special Forces.&lt;/p&gt;

&lt;p&gt;Overall, this was one of the best books I have ever read. It shows how much effort Ben Collins put into his life and work.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Its Not About The Bike - My Journey Back To Life (An autobiography by Lance Armstrong)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Everybody who keeps tabs with the news knows the most famous name in bicycle racing &amp;#8211; Lance Armstrong, and how he fought cancer and lived to tell the tale. But, not everybody knows the pain and suffering behind the glory. His autobiography reveals these and more with larchrymal gland drying detail. He begins by recounting his difficult upbringing where he never knew or saw his biological father(until very late in life), how the step father that he had, growing up, was a satan, and how his mother meant everything to him. He recalls how he found out that he had extraordinary stamina, lung capacity and the ability to sustain massive lactic acid build up in his muscles, that others just didn&amp;#8217;t have, and how he had never intended to be a cyclist. Lance Armstrong had always wanted to be a swimmer, and won several championships in his childhood. He talks about how a gracious person down the road from where he lived, handed him his first bicycle and his feeling of freedom when he was on his bike. He talks about how he used to beat competitors in local cycling championships who were twice his age. Most importantly, the book throws light on his mindset in his early days of cycling &amp;#8211; brash, arrogant, not caring for advice, thinking he was unstoppable.&lt;/p&gt;

&lt;p&gt;And then, his world comes to a dead stop when he is diagnosed with testicular cancer. Further tests revealed that the cancer had spread to his brain, and doctors gave him less that 3% change of living. He then talks about how different doctors advocated differnt types of chemotherapy to him and how they said that chemo would first have to kill him before bringing him back to life. He re-iterates on taking multiple opinions from differrent doctors because that was what saved him ultimately. He unexpectedly stumbled upon the best cancer speciality institution in the world where his doctors promised him he could get back on his bike, when all others had told him that he would be lucky if he could walk again. He talks about how much information he gained from reading books related to cancer in the lead up to his first chemo, that he believed he could write a book on testicular cancer himself. He then talks about his utter financial instability during treatment, when no company wanted to sponsor an athlete who was as good as dead. He talks about how he had completely lost hope in life and was resigned to a life off the bike. He describes in detail how demoralizing and unbearable chemotherapy is and how it kills a person from the inside. He gives due credit to his nurse, doctors, family and close friends who were by his side throughout his bad patch.&lt;/p&gt;

&lt;p&gt;He then moves on to explain what he regards as much worse than chemotherapy &amp;#8211; his return to life after cancer treatment. He tells that while so many people do so much to help cancer patients, not one person tells how to deal with life post cancer. He tells how he lived every day in fear that the cancer would return again, and how he would break out in cold sweat in the middle of the night everytime he felt pain in his abdomen, thinking that the caner had returned. He tells how life and racing did not interest him anymore, and all he wanted to do was to help others in the same situation as him. He talks about how he organized charity races to raise funds for cancer patients and how a little girl suffering from cancer became his best friend in life (He later dedicates his Tour de France win to this little girl). He explains how he met his future wife while organizing one of these charity races and how she was the sole motivator that helped him get on his bike again. He talks about how hard and alien cycling felt after his recovery and how he had lost all his unique traits like stamina, lung capacity that once made him unstoppable. He then explains how hard he had to train to get back most of it.&lt;/p&gt;

&lt;p&gt;Then comes the grand finale &amp;#8211; The months leading up to the greatest cycling race on earth &amp;#8211; the Tour de France. He tells how nobody except the US Postal team was ready to sponsor him, because nobody believed that a cancer patient could win the gruelling 3000 mile event. Lance Armstrong regards his cancer as a gift in one crucial way &amp;#8211; chemotherapy helped him lose 15 pounds and weight made all the difference in the Tour. His body was altered by chemotherapy, but in a way that would get him to the peak of bicycle racing. He talks about how his gruelling training post chemotherapy helped him thrash Tour de France title contenders in time trials by huge margins. He talks about how his superb comeback raised doping speculations in the french media and how he felt so bad about it after all the pain and hardships he had gone through in life. Ultimately, all speculations aside, he proved that cancer was no barrier for him by beating so many title favorites to win the Tour de France. Problems were aplenty for Lance Armstrong from the very beginning, but Lance Armstrong proved that he was truly unstoppable.&lt;/p&gt;

&lt;p&gt;This book has got to be the most inspiring book I have ever read. A fantastic read.&lt;/p&gt;</description>
</item>

<item>
<title>ROCKBOX - Breathe a new lease of life into an old mp3 player</title>
<link>http://varunbpatil.github.com/2012/06/27/rockbox</link>
<published>2012-06-27T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/27/rockbox</guid>
<description>&lt;p&gt;It is hard to come by people owning or buying a standalone mp3 player like an ipod these days given that smartphones are the name of the game. Why would anybody want a device that can only play mp3&amp;#8217;s and a few videos when a smartphone enables you to make a call and browse the web also? The fact of the matter is, smartphones are relatively new age and 5 years ago, they were not the rage that they are today, and that was the time when I got my first mp3 player - the SanDisk Sansa Fuze, with 4GB of on-board memory and an expansion slot. If you happen to own one like me and the device is gathering dust in your drawer, then this article is for you.&lt;/p&gt;

&lt;p&gt;In the time that I have owned it (about 5 years now), there have been very few official firmware updates if any. Moreover, the official Sansa Fuze firmware did not allow the low-end device to play aac files which I regularly find people generously uploading after ripping from itunes. There were also many audiobook formats that were not supported by the firmware, not to mention image and video files.&lt;/p&gt;

&lt;p&gt;In the beginning I believed they were due to hardware limitation of my low-end device. But then, I came across this opensource project by the name &lt;a href='http://www.rockbox.org/'&gt;ROCKBOX&lt;/a&gt; which allowed me to install an alternative firmware on my device. I immediately decided to give it a try especially since my Sansa Fuze had grown old and did not matter if anything went wrong !!!.&lt;/p&gt;

&lt;p&gt;Rockbox allows you to install the new firmware by the side of the original firmware, thus allowing you to dual boot the device into any firmware you want. Your particular device can fall into one of 3 categories - Stable, unstable, unusable. You should probably ignore this firware if it is in the unusable category, but if your device has an unstable or a stable port, I strongly suggest you give it a try.&lt;/p&gt;

&lt;p&gt;Unstable ports are not that bad actually. The firmware for my device was unstable for two years since I started using it. No problems at all. Only that a few features are not available like charging your device while you play music and so on. Nothing important. Only last year did I receive a stable firmware for my device. You can simply boot into your original firmware when you badly require those features which I think is quite rare. You can find a list of working and not-yet-working features for your device &lt;a href='http://www.rockbox.org/wiki/TargetStatus'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Rockbox gave my device a faster boot time, supported various music, image, audiobook and image formats not supported on the original firmware, much improved battery life. It also added some really cool and advanced setting for display, playback, sound quality, etc.&lt;/p&gt;

&lt;p&gt;Installing the firmware is very easy as well. All you have to do is &lt;a href='http://www.rockbox.org/download/'&gt;download the Rockbox installer&lt;/a&gt; which is universal for all devices. The installer is available for Windows, Linux and Mac. Ofcourse, if you are feeling brave, you can do the installation manually which depends on your particular device, although I haven&amp;#8217;t tried it on mine.&lt;/p&gt;

&lt;p&gt;Once you run the Rockbox installer (or Rockbox utility, as it is called), it will automatically detect your device (or choose from the list if it doesn&amp;#8217;t). It might also ask you to provide the path to the image file(.bin) of your original firmware. You can download this off your device manufacturer&amp;#8217;s website. Once done, you can choose to install the stable version(if available) or the latest(unstable version) for your device. I suggest you go with the Quick installation or complete installation options available. Rockbox will then download the appropriate firmware for your device and install it alongside the original firmware.&lt;/p&gt;

&lt;p&gt;And then the true fun begins. Rockbox supports theming the interface with a huge collection of community developed themes that can be downloaded and installed right from the Rockbox utility itself under the themes tab. It also allows you to install various fonts. These themes and fonts can then be selected via the settings option on your device. What&amp;#8217;s more, it allows you to install games and apps !!!. Even upgrading your firmware can be done via the Rockbox utility. Also be sure to read the Rockbox user manual for your particular device on how to maximize battery life, improve sound quality, etc, that you may find useful.&lt;/p&gt;</description>
</item>

<item>
<title>ADBing into your android phone</title>
<link>http://varunbpatil.github.com/2012/06/18/adb</link>
<published>2012-06-18T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/18/adb</guid>
<description>&lt;p&gt;I write this article to explain some cool things you can do with your android phone(any android phone) using ADB. ADB(or Android Debugging Bridge) is a tool used to connect and sends commands to your android phone from a computer. In this article I will be explaining with examples what you can accomplish on your android phone using ADB.&lt;/p&gt;

&lt;p&gt;The caveat here is that, the ADB examples that I give you here assume that your phone is rooted. Rooting a phone simply means that you are granted superuser priveleges to your phone. It should however be noted that rooting your phone may void warranty. The procedure for rooting varies from phone to phone. The specific procedure for your phone can easily be found on the internet, so I won&amp;#8217;t be concentrating on that here. I will assume that your phone is rooted. I will also assume some degree of familiarity with basic linux commands.&lt;/p&gt;

&lt;h4 id='installing_the_adb_tool__method_1'&gt;Installing the ADB tool &amp;#8211; Method 1&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ADB is available on the &lt;a href='http://developer.android.com/sdk/index.html'&gt;Android Software Development kit&lt;/a&gt;. Download the package for your platform and install(.exe on windows) or extract to your favorite location on linux.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Once installed or extracted, cd to the installation directory and launch &lt;em&gt;SDK Manager&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Check the platform tools option and uncheck all other options, unless you are developing apps on android.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;The platform tools including adb will be downloaded and installed.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Once installed, the adb tool is available in the &lt;em&gt;platform-tools/&lt;/em&gt; directory inside the android SDK directory. Make sure to add this to the PATH on linux or windows. On linux, you can modify your &lt;strong&gt;~/.bashrc&lt;/strong&gt; to contain the following line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  PATH=$PATH:/path/to/android/sdk/platform-tools/ &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On windows you can edit the Path system environment variable by searching for &amp;#8220;system environment variable&amp;#8221; in the windows start menu and appending the corresponding path of platform-tools/ to it.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;To bring the PATH to immediate effect in linux, run the following command from a terminal(or log-out and log back in).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ source ~/.bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;That&amp;#8217;s it. You are now ready to run the adb tool !!!.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='installing_the_adb_tool__method_2'&gt;Installing the ADB tool &amp;#8211; Method 2&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If you are not interested in any android development and do not want anything to do with the Android Software Development kit, you can just download the adb tool as a standalone tool. This ofcourse, is not official.&lt;/li&gt;

&lt;li&gt;Download a &lt;a href='http://dottech.org/downloads/adb_fastboot_and_other_tools.zip'&gt;zip file&lt;/a&gt; containing some important adb tools.&lt;/li&gt;

&lt;li&gt;Extract the contents to any place you wish.&lt;/li&gt;

&lt;li&gt;Then similar to the Method 1 above, add that directory to which you extracted the contents of the .zip into the PATH environment variable, and you are done!!!.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once ADB is installed, connect your phone via USB cable to your computer. Make sure, android debugging is enabled on your phone and make sure you have enabled installing of apps from third party sources on your phone.&lt;/p&gt;

&lt;h4 id='testing_adb_in_linux'&gt;Testing adb in linux&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fire up a terminal and type in the following commands in that sequence.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo -s
  $ adb kill-server
  $ adb root
  $ adb devices&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should now be able to see your phone listed under the &lt;em&gt;list of devices attached&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;You can now access your phone&amp;#8217;s file system as shown below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ adb shell
  # ls&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that when you are inside the adb shell, you have a hash prompt as opposed to a dollar prompt when you are not. You should now be able to see the root directory of your phone. You can now use several standard linux commands to play around with the files on your phone. You can run pretty much every linux file management command when you are at the hash prompt. Once you are done, you can drop out from the ADB shell by pressing CTRL-D on linux. You will be taken back to the dollar prompt.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For most of the following examples, you will need your phone&amp;#8217;s file system to be in R/W mode. So, do that now:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb remount&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have adb tool running, let us look at some cool things you can do with it. At least, this is what I do on my rooted phone using ADB :)&lt;/p&gt;

&lt;h4 id='using_adb_to_do_cool_things'&gt;Using ADB to do &lt;em&gt;cool&lt;/em&gt; things&lt;/h4&gt;

&lt;h5 id='changing_the_boot_animation_of_your_rooted_android_phone'&gt;Changing the boot animation of your rooted android phone&lt;/h5&gt;

&lt;p&gt;Several beautiful boot animations are available &lt;a href='http://forum.xda-developers.com/showthread.php?t=1559132'&gt;here&lt;/a&gt;. Of course, there are many others available freely on the internet. As a matter of fact, it is not very hard to create one yourself. To put simply, the boot animations consists of several individual image files and another text file that tells in what order to display these images and the delay between them. Thats it!!!.&lt;/p&gt;

&lt;p&gt;Once you have downloaded the zip file of the boot animation corresponding to your devices&amp;#8217; resolution, make sure you rename it as &lt;em&gt;bootanimation.zip&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Suppose you have saved the zip as &lt;em&gt;~/bootanimation.zip&lt;/em&gt;. Type in the following commands at the terminal to set your new bootanimation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb push ~/bootanimation.zip /system/media/
    $ adb reboot&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;#8217;s it!!!. Your phone will now reboot, and you should be able to see the new boot animation in action.&lt;/p&gt;

&lt;h5 id='push_files_into_or_pull_files_from_your_android_phonealso_applies_to_directories'&gt;Push files into or pull files from your android phone(also applies to directories)&lt;/h5&gt;

&lt;p&gt;You can pull files from your android phone to your computer using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb pull &amp;lt;src path on phone&amp;gt; &amp;lt;dst path on computer&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or you can push any file from your computer into your android phone as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb push &amp;lt;src path on computer&amp;gt; &amp;lt;dst path on phone&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example if you want to push ringtones from ~/Ringtones/ on your computer into your android phone, just do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb push ~/Ringtones/ /system/media/audio/Ringtones/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Similarly, you can push Alarms and Notification sounds to /system/media/audio/Alarms/ and /system/media/audio/Notifications/ directories on your phone respectively.&lt;/p&gt;

&lt;p&gt;You may be wondering what is it that ADB can do that many android file manager apps like Astro file manager cannot do. The answer is ADB allows you to modify system files as well(those that reside in /system/).&lt;/p&gt;

&lt;p&gt;You can also push(or pull) any files into your sdcard as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb push ~/names.txt /sdcard/
    $ adb pull /sdcard/songs/abc.mp3 ~/Desktop/&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='disable_the_annoying_camera_shutter_sounds'&gt;Disable the annoying camera shutter sounds&lt;/h5&gt;

&lt;p&gt;This feature is not available in the camera app for ICS roms currently, and the only way to accomplishFor this, is to modify a single system sound file, which is as easy as shown below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb shell
    # cd /system/media/audio/ui
    # mv &amp;lt;shutter_sound_file&amp;gt; &amp;lt;shutter_sound_file&amp;gt;.old&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By renaming the corresponding file, android can no longer find the sound files for the camera shutter and as a result, won&amp;#8217;t play the sound. Press CTRL-D to return to dollar prompt.&lt;/p&gt;

&lt;h5 id='install_paid_android_apps_for_free'&gt;Install paid android apps for free&lt;/h5&gt;

&lt;p&gt;Although this is illegal, I use ADB quite exclusively for this purpose!!!. I have identified two superb sources for downloading paid android apps for free. One is &lt;a href='http://www.4shared.com/'&gt;4shared&lt;/a&gt; and the other is &lt;a href='http://www.filecrop.com/'&gt;Filecrop&lt;/a&gt;. Search for the name of the app as present in the android market and then download the latest version of the android app. It is usually a file with the extension &lt;em&gt;.apk&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Suppose you have downloaded the apk file to ~/Desktop/test.apk you can install it on your phone in one step as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb install test.apk&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Voila!!!. You have just installed a paid android app for free!!!.&lt;/p&gt;

&lt;p&gt;Similarly you can very easily unistall apps from your android phone using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb uninstall &amp;lt;package name&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In short, you can run pretty much every linux command that you use on your computer&amp;#8217;s linux file system, to manage files on your android phone which can be very powerful when managing large number of files using regular expressions, which is just not possible on your native android file manager app. If you have any trouble at all using adb with your phone, feel free to leave a comment below. I will try my best to sort things out for you. :)&lt;/p&gt;</description>
</item>

<item>
<title>Beautiful duckling : Duck Duck Go</title>
<link>http://varunbpatil.github.com/2012/06/07/duck-duck-go</link>
<published>2012-06-07T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/07/duck-duck-go</guid>
<description>&lt;p&gt;It is no illusion that we are all religious followers of the ultimate search engine in the world, Google, and for good reason. Google boasts of some of the most advanced search algorithms that make your life easy. But I beg to differ. Google is not the only one with state-of-the-art search algorithms and addons that make searching easy. There is a new kid&amp;#8230; err&amp;#8230; duckling on the block with only one thing on mind - to depose Google as the ultimate search provider. Its name&amp;#8230; &lt;a href='http://www.duckduckgo.com/'&gt;Duck Duck Go&lt;/a&gt; !!!&lt;/p&gt;

&lt;p&gt;Think the name sounds too funny and silly to challenge google in its own game ? Wait till you visit &lt;a href='https://www.duckduckgo.com/'&gt;Duck Duck Go&lt;/a&gt;. Immediately you are greeted with a super simple and beautiful search page. One thing you have probably noticed by now is the &amp;#8220;https&amp;#8221; in the url. Thats right&amp;#8230; Duck Duck Go provides secure search much like google, although it did so at a time when Google used to put a &amp;#8220;Beta&amp;#8221; on its secure search page.&lt;/p&gt;

&lt;p&gt;Immediately there are a few similarities. Duck Duck Go marks important events on their logo much like Google. The interface is super simple like Google. Thats it. The similarities are only skin deep. If you see the bottom left of the web page, you will read that Duck Duck Go does not track or bubble you. This is by far the greatest selling point of this search engine. They promise not to track any user, while google does not make such a promise. As explained by the inventors of Duck Duck Go, other search engines tailor their search results especially for you by tracking your browsing history, facebook like history, your location, etc. But Duck Duck Go believes that you are missing on important information by filtering your results.&lt;/p&gt;

&lt;p&gt;Then we get to the thick of things where Duck Duck Go really starts to make a difference. While Google&amp;#8217;s search results are bland, Duck Duck go&amp;#8217;s search results are beautiful as well just like anywhere else on the site. One thing I particularly like about Duck Duck go is that it stores all your search preferences on the cloud instead of in your browser as cookies like Google does. This way, your search preferences remain in place(you only have to enter your passphrase) even if you decide to clear cookies on your browser.&lt;/p&gt;

&lt;p&gt;UI customizations are a dime-a-dozen. You can customize the colors in the results page, or simply select a color theme. Request WOT(web of trust) ratings for the website in the search. You can tell it to auto-load more search results as you scroll down the page, tell it whether your search should be passed using a GET request or a POST request !!!, change the widht of the search result display area, change fonts and font sizes, stop all ads from displaying in your result page, the list goes on and on&amp;#8230;&lt;/p&gt;

&lt;p&gt;If these customizations are not enough to get you interested, check out their &lt;a href='https://duckduckgo.com/goodies.html'&gt;search goodies&lt;/a&gt; page. Duck Duck go&amp;#8217;s search box allows you to do all sorts of mathematical calculations like finding the perimeter of triangles to unit conversions. You can also get the date of important events and find information about new movies. You can also find all sorts of recipes and geographical information about your location like time, weather. All this right from the search bar !!!. I am aware Google also provides such facilities for its users, but the good thing about Duck Duck go is that it allows commoners like you and me to suggest new features and if possible provide help implementing those. All these features are simply plugins that anyone can develop and submit to Duck Duck go.&lt;/p&gt;

&lt;p&gt;If this is not sufficient news for all you tech geeks out there, check out the mind blowing options on their &lt;a href='https://duckduckgo.com/tech.html'&gt;tech goodies&lt;/a&gt; page. You can generate super strong passwords, perform all sorts of mathematical calculations, find out rgb color codes, perform IP address calculations, get math formulae, find the hash codes of messages using hash algorithms like MD5, SHA.&lt;/p&gt;

&lt;p&gt;Perhaps the best features of all these is the !bang search syntax. It allows you to search directly from a websites internal search engine. For example, I find myself constantly searching 4shared for the latest paid android apps(actually their apk&amp;#8217;s) that I can download for free. With Duck Duck go, all I have to enter is &amp;#8220;!4shared swiftkeyx apk&amp;#8221; and I am taken directly to the search results on 4shared. There are a whole lot of sites(actually a gazillion more) for which this search technique can be applied and the entire list can be found &lt;a href='https://duckduckgo.com/bang.html'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am terribly impressed by this new duckling and has already made it to my browser&amp;#8217;s home page. I hope it does the same on your&amp;#8217;s too, because, Duck Duck Go, unlike Google is completely open source, and as always open source things rock !!! :). If you find Duck Duck Go impressive, and want to report some features I might have missed out(in the jubilation of completing the last exam of B.E !!!), please feel free to leave a comment below. :)&lt;/p&gt;</description>
</item>

<item>
<title>Black hat Hall Of Fame</title>
<link>http://varunbpatil.github.com/2012/06/06/black-hat-hackers</link>
<published>2012-06-06T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/06/black-hat-hackers</guid>
<description>&lt;p&gt;In this article I will be writing about few of the most notorious Black Hat hackers in the world. For those who don&amp;#8217;t know what Black Hat hackers means, they are those hackers with malicious intent as against White Hat hackers who hack mainly to expose security flaws to the developers. Here goes a list of the in-famous!!!&lt;/p&gt;

&lt;h4 id='jonathan_james'&gt;Jonathan James&lt;/h4&gt;

&lt;p&gt;This person tops the list of in-famous black hat hackers hands down. James was sent to juvenile prison at the age of 16 for installing backdoors on DoD(US dept. of defense) computers and stealing highly sensitive information regarding national security. James also cracked into NASA computers, stealing software worth approximately $1.7 million that included softwares critical to the operation of the ISS(international space station). In 2007, several high profile companies claimed that their networks were compromised and the police knew where to look for. James denied any involvement in these incidents, but his notoriety was such that he knew he would be convicted for crimes he did not commit and thus tragically took his own life in 2008. Sad ending to a computer wizard who at such a young age knew more than any of us could ever have known in our entire lives. :(&lt;/p&gt;

&lt;h4 id='kevin_mitnick'&gt;Kevin Mitnick&lt;/h4&gt;

&lt;p&gt;The most wanted computer criminal in United States&amp;#8217; history and the storyline behind two hollywood movies &amp;#8220;Freedom Downtime&amp;#8221; and &amp;#8220;Takedown&amp;#8221;. Mitnick currently owns and operates a computer security consulting agency called Mitnick Security Consulting, but not all was well before. He was sent to prison for hacking into DEC(Digital Equipment Corporation)&amp;#8217;s network. After release from prison, he went into hiding and went on a hacking spree that involved compromising the national defense warning system&amp;#8217;s and stealing corporate secrets. He ended up spending close to 5 years in solitary confinement. He later decided to mend his ways and use his expert skills for something more constructive, the result of which is quite evident today.&lt;/p&gt;

&lt;h4 id='albert_gonzalez'&gt;Albert Gonzalez&lt;/h4&gt;

&lt;p&gt;He entered the black hat hall of fame by stealing close to 170 million credit card details over a period of two years. He was also involved in fabrication of fraudulent passwords, health insurance cards and birth certificates for identity thefts that amounted to a staggering $4.3 million in stolen data. In 2010, he was sentenced to 20 years in prison.&lt;/p&gt;

&lt;h4 id='kevin_poulsen'&gt;Kevin Poulsen&lt;/h4&gt;

&lt;p&gt;Currently a top-notch journalist and a senior editor at Wired News, Kevin shot to fame by using his in-depth knowledge of telephone systems to hack into the telephone lines of LA radio(a popular radio station) and position himself as a winning caller in a competetion that won him a spanking new Porsche. In effect he had taken over all the telephone lines to the radio station to put himself into the hot seat. He then took his place on the FBI&amp;#8217;s most wanted list when he hacked into federal systems and stole wiretap information. After serving more than 5 years for his crimes, he decided to mend his ways much like Kevin Mitnick(even their names start with Kevin!!!. What a coincidence!!!). At one point in his reformed life, he even helped authorities nab 744 sex offenders just with their MySpace profiles. Not a bad ending after all. :)&lt;/p&gt;

&lt;h4 id='robert_tappan_morris'&gt;Robert Tappan Morris&lt;/h4&gt;

&lt;p&gt;Does the name sound familiar. It does indeed. He was the person who created the Morris worm, the first computer virus to be unleashed on the internet for which he became the first person to be prosecuted under the 1986 Computer Fraud and Abuse Act. What is unbelievable is that, he is the son of a NSA(National Security Agency) scientist Robert Morris. Even more unbelievable, Morris wrote the code for the worm while at Cornell University. The worm ultimately spread so far and wide and slowed down computers until they were unusable. But, Morris claimed that he only wanted to see how wide the internet was. He spent about 3 years in prison for this, but like a few others on this Hall of Fame, he decided use his talent towards something less incendiary. Morris is currently working as a professor at the MIT Computer Science and Artificial Intelligence Laboratory.&lt;/p&gt;

&lt;h4 id='nashon_evenchaim'&gt;Nashon Even-Chaim&lt;/h4&gt;

&lt;p&gt;Nahshon Even-Chaim ,aka Phoenix, was the first major computer hacker to be convicted in Australia. He was one of the most highly-skilled members of a computer hacking group called The Realm, based in Melbourne, Australia, from the late 1980s until his arrest by the Australian Federal Police in early 1990. His targets centred on defence and nuclear weapons research networks including NASA. He developed a reputation within The Realm, his computer hacking group, for skill and arrogance. The AFP(Australian Federal Police) installed wiretaps on his phone and modems. The data taps revealed Even-Chaim spent marathon sessions at his computer, working at a rapid pace to enter and tamper with computer systems. It was the first time in the world a remote data intercept had been used to gain evidence for a computer crime prosecution.&lt;/p&gt;

&lt;h4 id='adrian_lamo'&gt;Adrian Lamo&lt;/h4&gt;

&lt;p&gt;He shot to fame by breaking into major companies like New York Times, Microsoft Corporation by using internet connections at coffee shops and libraries to infiltrate these systems, which earned him the nickname of the &amp;#8220;homeless hacker&amp;#8221;. His other hits include Yahoo!, Bank of America, Citigroup and Cingular. He used to inform the respective companies of the security flaws in their systems after breaking into and exploiting them, but since he was not hired by any of these companies as penetration testers, what he did was illegal. After serving nearly 2 years, Adrian now works as an award-winning journalist and public speaker.&lt;/p&gt;
&lt;img src='/images/Lamo-Mitnick-Poulsen.png' width='750px' /&gt;
&lt;p&gt;Adrian Lamo, Kevin-Mitnick and Kevin Poulsen in reformed times :)&lt;/p&gt;</description>
</item>

<item>
<title>Behind the scene</title>
<link>http://varunbpatil.github.com/2012/06/02/behind-the-scene</link>
<published>2012-06-02T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/02/behind-the-scene</guid>
<description>&lt;p&gt;In this article I would like to completely share with you the details of how I created the website you are seeing right now.&lt;/p&gt;

&lt;h4 id='where_did_i_get_the_idea_and_inspiration_'&gt;Where did I get the idea and inspiration ?&lt;/h4&gt;

&lt;p&gt;The first time I heard about &lt;a href='https://github.com/mojombo/jekyll'&gt;Jekyll&lt;/a&gt; was on the &lt;a href='http://rkrishnan.org/about.html'&gt;about page&lt;/a&gt; of my mentor Ramkrishnan. Then while I started to dig out more information about it, I learnt about its close integration with &lt;a href='https://github.com/'&gt;Github&lt;/a&gt; and &lt;a href='http://pages.github.com/'&gt;Github pages&lt;/a&gt;. Ofcourse, it had to be since Jekyll was created by a person named &lt;a href='http://tom.preston-werner.com/'&gt;Tom Preston-Werner&lt;/a&gt; from Github. I had recently used Github pages to create a simple website for my 8th semester B.Tech project and liked the simplicity and beauty of it all. Then I happened to stumble upon a rich set of &lt;a href='https://www.google.co.in/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;ved=0CHAQ0gIoATAA&amp;amp;url=https%3A%2F%2Fgithub.com%2Fmojombo%2Fjekyll%2Fwiki%2FSites&amp;amp;ei=EG_KT_fxF4nsrAfQtOG0Dg&amp;amp;usg=AFQjCNGcwhnLKJ2b_VD5m-T6E42gVZVhvQ&amp;amp;sig2=6urBQOcD8OXhWJd5WQfkhw'&gt;sites&lt;/a&gt; implemented using jekyll and hosted on Github. I quickly stumbled through all the mentioned sites and decided to try and imitate &lt;a href='http://www.magpielab.com/'&gt;this site&lt;/a&gt;. Ofcourse, imitation is allowed since all the listed sites are free (Even my site is free to be used by anyone interested in building a quick website with no cost at all. I will tell you shortly how you can easily create your own site using my site&amp;#8217;s source code as a start point in no time at all). Quickly enough I got to work creating a rough outline for my new website. I also got a lot of implementation help about Jekyll and Liquid from &lt;a href='http://jekyllbootstrap.com/'&gt;jekyll-bootstrap&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id='what_programming_languages_were_used_'&gt;What programming languages were used ?&lt;/h4&gt;

&lt;p&gt;The core programming is done using HTML, CSS, &lt;a href='http://daringfireball.net/projects/markdown/basics'&gt;Markdown&lt;/a&gt; and &lt;a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers'&gt;Liquid&lt;/a&gt;. Of course, you are free to use JavaScript, jQuery&amp;#8230; The way it is different from conventional web programming is that the entire site has to be organized in a structure that &lt;a href='https://github.com/mojombo/jekyll/wiki/usage'&gt;Jekyll&lt;/a&gt; expects to find. There are folders with pre-defined names into which you will have to put in your files so that Jekyll can locate them. Jekyll is simply a parser which takes Markdown, HTML, CSS, Liquid code and others and generates plain html files for you which you can then deploy on any web server. You can use Jekyll installed on your PC to build the site before you post it to your web-server or simply push the raw files into a repository on Github which then parses you raw code for you which means you don&amp;#8217;t have to have Jekyll on your PC. Nonetheless, it helps to have Jekyll installed on your machine to test your implementation instead of having to push your code to your Github repository every time you want to test something. Liquid allows fantastic reuse of code (templating) and also has constructs for variable assignment, looping, switch-case, conditional statements and a lot more that is not found in plain HTML. You can actually find all the help needed(all the help I used) in the links highlighted above. I will give links to a few more detailed tutorials shortly.&lt;/p&gt;

&lt;h4 id='other_shiny_new_bits_not_present_in_my_old_website_'&gt;Other shiny new bits (not present in my old website) !!!&lt;/h4&gt;

&lt;p&gt;I am very happy to report some exciting new features that I have succesfully integrated into this website that you can use and that were not found in my &lt;a href='http://varunpatil.xtreemhost.com/'&gt;earlier website&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can now look at my posts categorized by &lt;a href='http://varunbpatil.github.com/tag/'&gt;tags&lt;/a&gt; and also view an archive of all my previous posts.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;You can now subscribe to my blog posts to instantly get my blog posts on your favourite reader or you can even subscribe by mail where new posts I write get delivered to your mailbox everyday. Don&amp;#8217;t worry, your email id&amp;#8217;s and other subscription details are managed by professional programs like feedburner and thus there can be no misuse. You can find the subscription buttons on the bottom of every page in my website or you can simply click on the links below. &lt;ul&gt;
  &lt;li&gt;
      &lt;a href='http://feeds.feedburner.com/varunbpatil'&gt;subscribe via rss reader&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
      &lt;a href='http://feedburner.google.com/fb/a/mailverify?uri=varunbpatil&amp;loc=en_US'&gt;subscribe via email&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;I have also incorporated disqus comments into my blog posts where you are free to comment and provide feedback by logging into your favorite social networking site.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='superb_quick_start_links'&gt;Superb quick start links&lt;/h4&gt;

&lt;p&gt;The following are some of the most useful quick start links I used to get my website up and running in no time at all.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://net.tutsplus.com/tutorials/other/building-static-sites-with-jekyll/'&gt;Building static sites with Jekyll&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://studiomohawk.github.com/jekyll-bootstrap/lessons/2011/12/29/jekyll-introduction/'&gt;JB Jekyll Introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, if there is anyway I can help you understand the technologies I have used or help you get started with your own website like mine, please to leave a comment below or better even, contact me using the links at the bottom of the page. The best way to get started is to download or fork the &lt;a href='https://github.com/varunbpatil/varunbpatil.github.com'&gt;source code&lt;/a&gt; for my website from Github and start experimenting with things. It won&amp;#8217;t take you long before you get into the groove. That&amp;#8217;s the way I learnt and that&amp;#8217;s the way I built this website, period. I hope I have aroused your interest in blogging and web designing through this short article. Any feedback regarding this site is much appreciated.&lt;/p&gt;</description>
</item>

<item>
<title>The ultimate Vim configuration</title>
<link>http://varunbpatil.github.com/2012/05/28/vim-config</link>
<published>2012-05-28T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/05/28/vim-config</guid>
<description>&lt;p&gt;Not long ago, I used notepad++ on windows and medit on Linux as my favorite text editor for hardcore programming. But then, during my brief internship at Cisco, I was coaxed into trying out vim (credits to my mentor &lt;a href='http://rkrishnan.org/'&gt;Ramkrishnan&lt;/a&gt; at Cisco). And the skills that my colleague&amp;#8217;s demonstrated while using vim further compelled me to try it out. After only about one month of forcing myself to use vim for all editing tasks, I found myself loving it more by the day. I have now reached a point where I can&amp;#8217;t live without vim.&lt;/p&gt;

&lt;p&gt;And today I found out about a project on Github which aims to develop the ultimate vim config file. A vim config file is the core of your vim experience where you control how vim behaves. A good vim configuration means a good vim experience. This project known as &lt;a href='http://vim.spf13.com/'&gt;spf13-vim&lt;/a&gt; is among the top 0.5% of projects on Github and it shows in the quality of the project web page itself and of course the usability of the vim configuration.&lt;/p&gt;

&lt;p&gt;Installation is as easy as downloading a single shell script and executing it (instructions are in the link above). The project has also integrated the greatest vim plugins ever that increase productivity to a great extent. Most importantly it is completely cross-platform and works the same whether you are on windows or Linux. It has all the best vim options set, provides the ability to customize the configuration, includes beautiful colorschemes, and a host of plugins like spell check and those that aid programmers like comments, directory trees, etc. With this, vim has turned into a full featured IDE much like eclipse and the like. I am simply loving it :)&lt;/p&gt;</description>
</item>

<item>
<title>Interesting last few months</title>
<link>http://varunbpatil.github.com/2012/05/26/last-few-months</link>
<published>2012-05-26T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/05/26/last-few-months</guid>
<description>&lt;p&gt;The last few months have been some of my best. Joined Cisco for an internship, immediately got the opportunity to work on Android. Completed my college project work with flying colors, won TCS best student award for topping my batch at college, enjoying a completely working ICS mod on my Motorola defy, completed the Cisco project on the last day of internship(with help ofcourse, lots of it !!!). Foolish of me to think that I can put all of it in one post, but here I am doing exactly the same.&lt;/p&gt;

&lt;p&gt;At Cisco, I had the opportunity of working with my mentor &lt;a href='http://rkrishnan.org/'&gt;Ramkrishnan&lt;/a&gt;. Even though it was for just 3 months, I learnt so many things from him &amp;#8211; gathered the courage to use vi(can&amp;#8217;t live without it now !!!), became fairly good at touch-typing(close to 40 wpm !!!), learnt a lot about git(I now use it for all my projects and this website as well), and ofcourse Android, adb and things of that sort that I now use very often to play around with my phone :) And ofcourse, I was able to complete the Cisco internship project just in time with a lot of his help particularly because I was so new to &lt;a href='http://gstreamer.freedesktop.org/'&gt;Gstreamer&lt;/a&gt; and Android. More on the project in a later post. Above all, one thing that I really liked about my mentor was his down-to-earth nature and ever-smiling face :). Hope I can learn more from him in the future.&lt;/p&gt;

&lt;p&gt;Even though I did not have much time to work on my college project since I was in Bangalore for 4 days a week, it really went well&amp;#8230; the presentation, demo and all. With all the heavy-lifting over, I still need to prepare some reports and formal papers on the project and I am already half way through. So no worries :-)&lt;/p&gt;

&lt;p&gt;And finally CM9 ICS by &lt;a href='http://forum.xda-developers.com/showthread.php?t=1353003'&gt;epsylon3&lt;/a&gt; has become stable enough on my Motorola defy to use everyday and it is kind of invigorating to have the latest and greatest android powering your phone :)&lt;/p&gt;</description>
</item>

<item>
<title>Tested : MIUI rom on Motorola Defy</title>
<link>http://varunbpatil.github.com/2012/01/15/miui-motorola-defy</link>
<published>2012-01-15T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/01/15/miui-motorola-defy</guid>
<description>&lt;p&gt;I have been using Cyanogenmod 7 (gingerbread) on my motorola defy for two months now and there was nothing more I wanted out of my phone&amp;#8230;that is until I laid my eyes on the &lt;a href='http://en.miui.com/'&gt;MIUI rom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I decided to give it a try especially after I read that the MIUI rom runs more smoothly that CM7 on the motorola defy. Flashing the MIUI rom follows exactly the same procedure as flashing the CM7, only easier because, you don&amp;#8217;t need to flash google apps seperately like in CM7 because it is built into the MIUI rom. The MIUI rom is also based on Android Gingerbread 2.3.7 and is developed by Chinese developers using the cyanogenmod base. True to what they claim, MIUI provides the most beautiful UI of all custom ROM&amp;#8217;s. It has some elements of the Apple&amp;#8217;s iOS(which is undoubtedly beautiful) combined with stock android and is heavily customizable&amp;#8230;even more compared to the cyanogenmod ROM. And like in the CM7, my motorola defy is now automatically overclocked to 1GHz from the stock 800MHz. There is also virtually no lag in screen transition. Moreover MIUI can boast of an incredible in-built music app and an equally incredible social app and a wide array of community and fan developed themes. The camera app packs comparably fewer features than CM7, but is livable with for most of your photo shooting activities. I only hope they release an Android ICS version soon. :)&lt;/p&gt;

&lt;p&gt;The really fun thing about MIUI roms is that there are so many forks available. There is one called &lt;a href='http://miuiandroid.com/community/'&gt;MIUI Android&lt;/a&gt;, there is one called &lt;a href='http://www.miui.us/'&gt;MIUI U.S&lt;/a&gt;, then there is the MIUI Scotland or &lt;a href='http://miuiscotland.co.uk/site/'&gt;Galnet MIUI&lt;/a&gt; and many many more based on your region and language !!!&lt;/p&gt;</description>
</item>

<item>
<title>RSA encryption using Tcl</title>
<link>http://varunbpatil.github.com/2012/01/10/rsa-tcl</link>
<published>2012-01-10T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/01/10/rsa-tcl</guid>
<description>&lt;p&gt;After being placed in Cisco, I decided to learn some Tcl programming, which I heard from a couple of my friends, that it would help me in my workplace.&lt;/p&gt;

&lt;p&gt;Tcl is basically a scripting language like perl or python or shell programming and it is very easy to learn and use. Its cousin, the Tk language can be used to create GUI&amp;#8217;s whereas Tcl is mainly a command line language. The reason I decided to write an RSA encryption routine in Tcl is because the program involves and tests all major Tcl constructs from accessing files to performing mathematical computations and parsing text and thus is a very good example to test your Tcl skills. Coming to RSA, it is one of the best public-key cryptosystems available. Just in case, somebody wants to encrypt simple files on their computer, they can use my encryption program to do so :P. Of course, you will need to have Tcl interpreter installed on your computer&amp;#8230;.and know how to run the Tcl script :D which is hard work, I agree and much more complicated than some free software available on the market like KeePassX which is a billion times more easy to use and gazillion times more secure than my implementation, but nonetheless, I am very happy to give you my &lt;a href='http://www.mediafire.com/?csn6nc8jwr6mr5a'&gt;Tcl RSA implementation&lt;/a&gt; :D happy encrypting !!! The following lines show you how you may use my program to encrypt or decrypt files&amp;#8230;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make sure you have Tcl interpreter installed. Installing it is straightforward in Linux. You can find it in the Software repository. In ubuntu you can install it by typing the following in a terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo apt-get install tcl&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;After downloading the &lt;a href='http://www.mediafire.com/?csn6nc8jwr6mr5a'&gt;Tcl script&lt;/a&gt; &amp;#8220;rsa.tcl&amp;#8221;, make sure it has execute permissions on your computer. To change the permissions in Ubuntu type the following in a terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ cd path_to_tcl_script
  $ chmod +x rsa.tcl&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Now you can run the script as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ cd path_to_tcl_script
  $ ./rsa.tcl&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Enter E(or e) to perform encryption and D(or d) to perform decryption.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;When prompted, please provide the complete(absolute) path to the file on your computer which you want to encrypt(or decrypt).&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Thats it&amp;#8230; You are done !!!. Happy Encrypting :D&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
</item>

<item>
<title>Stuxnet: the greatest, meanest computer virus ever written</title>
<link>http://varunbpatil.github.com/2012/01/04/stuxnet</link>
<published>2012-01-04T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/01/04/stuxnet</guid>
<description>&lt;p&gt;Here is a detailed and &lt;a href='http://www.wired.com/threatlevel/2011/07/how-digital-detectives-deciphered-stuxnet/all/1'&gt;awe inspiring article&lt;/a&gt; by Wired news regarding the working of Stuxnet, possibly the greatest and most complex computer virus ever written. I will try to capture some of its essence in this article.&lt;/p&gt;

&lt;p&gt;Stuxnet was written to spread through USB devices and its main target was Siemens Step7 controllers running Microsoft&amp;#8217;s OS. These Seimens controllers are mainly used to control mechanical devices like motors, levers, valves,etc. and these were in heavy use at Iran&amp;#8217;s uranium enrichment facilities. Stuxnet is said to have infected over 50% of computers at these location before anyone knew something was wrong, and as a result Iran&amp;#8217;s nuclear weapon development program is claimed to have been setback by about 10 years. What is surprising is that Stuxnet is actually a very large program(about 5GB) as opposed to normal viruses which stretch into kilobytes, and the USA was the least affected by this virus even though the US is usually the most hit in other virus attacks. The Stuxnet virus was so organised that its developers could easily swap certain functions as required and update the malicious code easily. Whats more, it never stored Windwows API files(.dll) files in the hard disk as do conventional viruses, so that Anti virus softwares could never detect them. Stuxnet is of the &amp;#8216;zero-day&amp;#8217; variety, the most advanced of all viruses. Whats is more interesting is that Stuxnet never used the internet to infect in large numbers like a conventional virus. It was more content on spreading through local area networks which again showcase its single minded purpose of destabilizing Iran&amp;#8217;s nuclear project.&lt;/p&gt;

&lt;p&gt;Stuxnet gathered all working data from the Seimens controllers and passed it on to the attackers. The malicious .dll files would take the place of the good ones from microsoft and then intercept commands from the Siemens Step7 controller. It would then manipulate these commands before being sent to the controllers for the motors and valves controlling the centrifuge&amp;#8217;s used in the nuclear plant thus wrecking absolute havoc. Developing the Stuxnet code required knowledge of the Siemens Step7 Programmable logic controller which is infact proprietary information that only government agencies know further fueling the speculation that USA and its allies like Israel were behind the development of the super-virus.&lt;/p&gt;

&lt;p&gt;Symantec, the Antivirus giant usually spends not more than a couple of days deciphering conventional malware, but as the wired article expatiates, even after a month they had not been able to completely decipher Stuxnet&amp;#8217;s code. Malware writers usually modify registry values so that the malware they write does not infect their own machines. When the malware sees such values in the registry, it simply shuts down. One such registry value in Stuxnet resembled an important date in jewish history when a jewish business man was shot dead by the firing squad in Iran which served to add to the speculation that Israel might have been involved in Stuxnet&amp;#8217;s development. Infact, two Iranian nuclear scientists who disclosed some information about the damage that Stuxnet had caused were assasinated a few days after their disclosure. This article is the most fascinating read I have had in a long time. I hope you like it too.&lt;/p&gt;</description>
</item>

</channel>
</rss>
