<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Varun B Patil's blog</title>
<description>Varun B Patil's blog</description>
<link>http://varunbpatil.github.com/</link>

<item>
<title>ROCKBOX - Breathe a new lease of life into an old mp3 player</title>
<link>http://varunbpatil.github.com/2012/06/27/rockbox</link>
<published>2012-06-27T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/27/rockbox</guid>
<description>&lt;p&gt;It is hard to come by people owning or buying a standalone mp3 player like an ipod these days given that smartphones are the name of the game. Why would anybody want a device that can only play mp3&amp;#8217;s and a few videos when a smartphone enables you to make a call and browse the web also? The fact of the matter is, smartphones are relatively new age and 5 years ago, they were not the rage that they are today, and that was the time when I got my first mp3 player - the SanDisk Sansa Fuze, with 4GB of on-board memory and an expansion slot. If you happen to own one like me and the device is gathering dust in your drawer, then this article is for you.&lt;/p&gt;

&lt;p&gt;In the time that I have owned it (about 5 years now), there have been very few official firmware updates if any. Moreover, the official Sansa Fuze firmware did not allow the low-end device to play aac files which I regularly find people generously uploading after ripping from itunes. There were also many audiobook formats that were not supported by the firmware, not to mention image and video files.&lt;/p&gt;

&lt;p&gt;In the beginning I believed they were due to hardware limitation of my low-end device. But then, I came across this opensource project by the name &lt;a href='http://www.rockbox.org/'&gt;ROCKBOX&lt;/a&gt; which allowed me to install an alternative firmware on my device. I immediately decided to give it a try especially since my Sansa Fuze had grown old and did not matter if anything went wrong !!!.&lt;/p&gt;

&lt;p&gt;Rockbox allows you to install the new firmware by the side of the original firmware, thus allowing you to dual boot the device into any firmware you want. Your particular device can fall into one of 3 categories - Stable, unstable, unusable. You should probably ignore this firware if it is in the unusable category, but if your device has an unstable or a stable port, I strongly suggest you give it a try.&lt;/p&gt;

&lt;p&gt;Unstable ports are not that bad actually. The firmware for my device was unstable for two years since I started using it. No problems at all. Only that a few features are not available like charging your device while you play music and so on. Nothing important. Only last year did I receive a stable firmware for my device. You can simply boot into your original firmware when you badly require those features which I think is quite rare. You can find a list of working and not-yet-working features for your device &lt;a href='http://www.rockbox.org/wiki/TargetStatus'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Rockbox gave my device a faster boot time, supported various music, image, audiobook and image formats not supported on the original firmware, much improved battery life. It also added some really cool and advanced setting for display, playback, sound quality, etc.&lt;/p&gt;

&lt;p&gt;Installing the firmware is very easy as well. All you have to do is &lt;a href='http://www.rockbox.org/download/'&gt;download the Rockbox installer&lt;/a&gt; which is universal for all devices. The installer is available for Windows, Linux and Mac. Ofcourse, if you are feeling brave, you can do the installation manually which depends on your particular device, although I haven&amp;#8217;t tried it on mine.&lt;/p&gt;

&lt;p&gt;Once you run the Rockbox installer (or Rockbox utility, as it is called), it will automatically detect your device (or choose from the list if it doesn&amp;#8217;t). It might also ask you to provide the path to the image file(.bin) of your original firmware. You can download this off your device manufacturer&amp;#8217;s website. Once done, you can choose to install the stable version(if available) or the latest(unstable version) for your device. I suggest you go with the Quick installation or complete installation options available. Rockbox will then download the appropriate firmware for your device and install it alongside the original firmware.&lt;/p&gt;

&lt;p&gt;And then the true fun begins. Rockbox supports theming the interface with a huge collection of community developed themes that can be downloaded and installed right from the Rockbox utility itself under the themes tab. It also allows you to install various fonts. These themes and fonts can then be selected via the settings option on your device. What&amp;#8217;s more, it allows you to install games and apps !!!. Even upgrading your firmware can be done via the Rockbox utility. Also be sure to read the Rockbox user manual for your particular device on how to maximize battery life, improve sound quality, etc, that you may find useful.&lt;/p&gt;</description>
</item>

<item>
<title>ADBing into your android phone</title>
<link>http://varunbpatil.github.com/2012/06/18/adb</link>
<published>2012-06-18T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/18/adb</guid>
<description>&lt;p&gt;I write this article to explain some cool things you can do with your android phone(any android phone) using ADB. ADB(or Android Debugging Bridge) is a tool used to connect and sends commands to your android phone from a computer. In this article I will be explaining with examples what you can accomplish on your android phone using ADB.&lt;/p&gt;

&lt;p&gt;The caveat here is that, the ADB examples that I give you here assume that your phone is rooted. Rooting a phone simply means that you are granted superuser priveleges to your phone. It should however be noted that rooting your phone may void warranty. The procedure for rooting varies from phone to phone. The specific procedure for your phone can easily be found on the internet, so I won&amp;#8217;t be concentrating on that here. I will assume that your phone is rooted. I will also assume some degree of familiarity with basic linux commands.&lt;/p&gt;

&lt;h4 id='installing_the_adb_tool__method_1'&gt;Installing the ADB tool &amp;#8211; Method 1&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ADB is available on the &lt;a href='http://developer.android.com/sdk/index.html'&gt;Android Software Development kit&lt;/a&gt;. Download the package for your platform and install(.exe on windows) or extract to your favorite location on linux.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Once installed or extracted, cd to the installation directory and launch &lt;em&gt;SDK Manager&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Check the platform tools option and uncheck all other options, unless you are developing apps on android.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;The platform tools including adb will be downloaded and installed.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Once installed, the adb tool is available in the &lt;em&gt;platform-tools/&lt;/em&gt; directory inside the android SDK directory. Make sure to add this to the PATH on linux or windows. On linux, you can modify your &lt;strong&gt;~/.bashrc&lt;/strong&gt; to contain the following line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  PATH=$PATH:/path/to/android/sdk/platform-tools/ &lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On windows you can edit the Path system environment variable by searching for &amp;#8220;system environment variable&amp;#8221; in the windows start menu and appending the corresponding path of platform-tools/ to it.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;To bring the PATH to immediate effect in linux, run the following command from a terminal(or log-out and log back in).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ source ~/.bashrc&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;That&amp;#8217;s it. You are now ready to run the adb tool !!!.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='installing_the_adb_tool__method_2'&gt;Installing the ADB tool &amp;#8211; Method 2&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If you are not interested in any android development and do not want anything to do with the Android Software Development kit, you can just download the adb tool as a standalone tool. This ofcourse, is not official.&lt;/li&gt;

&lt;li&gt;Download a &lt;a href='http://dottech.org/downloads/adb_fastboot_and_other_tools.zip'&gt;zip file&lt;/a&gt; containing some important adb tools.&lt;/li&gt;

&lt;li&gt;Extract the contents to any place you wish.&lt;/li&gt;

&lt;li&gt;Then similar to the Method 1 above, add that directory to which you extracted the contents of the .zip into the PATH environment variable, and you are done!!!.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once ADB is installed, connect your phone via USB cable to your computer. Make sure, android debugging is enabled on your phone and make sure you have enabled installing of apps from third party sources on your phone.&lt;/p&gt;

&lt;h4 id='testing_adb_in_linux'&gt;Testing adb in linux&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fire up a terminal and type in the following commands in that sequence.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo -s
  $ adb kill-server
  $ adb root
  $ adb devices&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should now be able to see your phone listed under the &lt;em&gt;list of devices attached&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;You can now access your phone&amp;#8217;s file system as shown below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ adb shell
  # ls&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that when you are inside the adb shell, you have a hash prompt as opposed to a dollar prompt when you are not. You should now be able to see the root directory of your phone. You can now use several standard linux commands to play around with the files on your phone. You can run pretty much every linux file management command when you are at the hash prompt. Once you are done, you can drop out from the ADB shell by pressing CTRL-D on linux. You will be taken back to the dollar prompt.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For most of the following examples, you will need your phone&amp;#8217;s file system to be in R/W mode. So, do that now:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb remount&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have adb tool running, let us look at some cool things you can do with it. At least, this is what I do on my rooted phone using ADB :)&lt;/p&gt;

&lt;h4 id='using_adb_to_do_cool_things'&gt;Using ADB to do &lt;em&gt;cool&lt;/em&gt; things&lt;/h4&gt;

&lt;h5 id='changing_the_boot_animation_of_your_rooted_android_phone'&gt;Changing the boot animation of your rooted android phone&lt;/h5&gt;

&lt;p&gt;Several beautiful boot animations are available &lt;a href='http://forum.xda-developers.com/showthread.php?t=1559132'&gt;here&lt;/a&gt;. Of course, there are many others available freely on the internet. As a matter of fact, it is not very hard to create one yourself. To put simply, the boot animations consists of several individual image files and another text file that tells in what order to display these images and the delay between them. Thats it!!!.&lt;/p&gt;

&lt;p&gt;Once you have downloaded the zip file of the boot animation corresponding to your devices&amp;#8217; resolution, make sure you rename it as &lt;em&gt;bootanimation.zip&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Suppose you have saved the zip as &lt;em&gt;~/bootanimation.zip&lt;/em&gt;. Type in the following commands at the terminal to set your new bootanimation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb push ~/bootanimation.zip /system/media/
    $ adb reboot&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;#8217;s it!!!. Your phone will now reboot, and you should be able to see the new boot animation in action.&lt;/p&gt;

&lt;h5 id='push_files_into_or_pull_files_from_your_android_phonealso_applies_to_directories'&gt;Push files into or pull files from your android phone(also applies to directories)&lt;/h5&gt;

&lt;p&gt;You can pull files from your android phone to your computer using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb pull &amp;lt;src path on phone&amp;gt; &amp;lt;dst path on computer&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or you can push any file from your computer into your android phone as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb push &amp;lt;src path on computer&amp;gt; &amp;lt;dst path on phone&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example if you want to push ringtones from ~/Ringtones/ on your computer into your android phone, just do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb push ~/Ringtones/ /system/media/audio/Ringtones/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Similarly, you can push Alarms and Notification sounds to /system/media/audio/Alarms/ and /system/media/audio/Notifications/ directories on your phone respectively.&lt;/p&gt;

&lt;p&gt;You may be wondering what is it that ADB can do that many android file manager apps like Astro file manager cannot do. The answer is ADB allows you to modify system files as well(those that reside in /system/).&lt;/p&gt;

&lt;p&gt;You can also push(or pull) any files into your sdcard as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb push ~/names.txt /sdcard/
    $ adb pull /sdcard/songs/abc.mp3 ~/Desktop/&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id='disable_the_annoying_camera_shutter_sounds'&gt;Disable the annoying camera shutter sounds&lt;/h5&gt;

&lt;p&gt;This feature is not available in the camera app for ICS roms currently, and the only way to accomplishFor this, is to modify a single system sound file, which is as easy as shown below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb shell
    # cd /system/media/audio/ui
    # mv &amp;lt;shutter_sound_file&amp;gt; &amp;lt;shutter_sound_file&amp;gt;.old&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By renaming the corresponding file, android can no longer find the sound files for the camera shutter and as a result, won&amp;#8217;t play the sound. Press CTRL-D to return to dollar prompt.&lt;/p&gt;

&lt;h5 id='install_paid_android_apps_for_free'&gt;Install paid android apps for free&lt;/h5&gt;

&lt;p&gt;Although this is illegal, I use ADB quite exclusively for this purpose!!!. I have identified two superb sources for downloading paid android apps for free. One is &lt;a href='http://www.4shared.com/'&gt;4shared&lt;/a&gt; and the other is &lt;a href='http://www.filecrop.com/'&gt;Filecrop&lt;/a&gt;. Search for the name of the app as present in the android market and then download the latest version of the android app. It is usually a file with the extension &lt;em&gt;.apk&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Suppose you have downloaded the apk file to ~/Desktop/test.apk you can install it on your phone in one step as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb install test.apk&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Voila!!!. You have just installed a paid android app for free!!!.&lt;/p&gt;

&lt;p&gt;Similarly you can very easily unistall apps from your android phone using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    $ adb uninstall &amp;lt;package name&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In short, you can run pretty much every linux command that you use on your computer&amp;#8217;s linux file system, to manage files on your android phone which can be very powerful when managing large number of files using regular expressions, which is just not possible on your native android file manager app. If you have any trouble at all using adb with your phone, feel free to leave a comment below. I will try my best to sort things out for you. :)&lt;/p&gt;</description>
</item>

<item>
<title>Beautiful duckling : Duck Duck Go</title>
<link>http://varunbpatil.github.com/2012/06/07/duck-duck-go</link>
<published>2012-06-07T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/07/duck-duck-go</guid>
<description>&lt;p&gt;It is no illusion that we are all religious followers of the ultimate search engine in the world, Google, and for good reason. Google boasts of some of the most advanced search algorithms that make your life easy. But I beg to differ. Google is not the only one with state-of-the-art search algorithms and addons that make searching easy. There is a new kid&amp;#8230; err&amp;#8230; duckling on the block with only one thing on mind - to depose Google as the ultimate search provider. Its name&amp;#8230; &lt;a href='http://www.duckduckgo.com/'&gt;Duck Duck Go&lt;/a&gt; !!!&lt;/p&gt;

&lt;p&gt;Think the name sounds too funny and silly to challenge google in its own game ? Wait till you visit &lt;a href='https://www.duckduckgo.com/'&gt;Duck Duck Go&lt;/a&gt;. Immediately you are greeted with a super simple and beautiful search page. One thing you have probably noticed by now is the &amp;#8220;https&amp;#8221; in the url. Thats right&amp;#8230; Duck Duck Go provides secure search much like google, although it did so at a time when Google used to put a &amp;#8220;Beta&amp;#8221; on its secure search page.&lt;/p&gt;

&lt;p&gt;Immediately there are a few similarities. Duck Duck Go marks important events on their logo much like Google. The interface is super simple like Google. Thats it. The similarities are only skin deep. If you see the bottom left of the web page, you will read that Duck Duck Go does not track or bubble you. This is by far the greatest selling point of this search engine. They promise not to track any user, while google does not make such a promise. As explained by the inventors of Duck Duck Go, other search engines tailor their search results especially for you by tracking your browsing history, facebook like history, your location, etc. But Duck Duck Go believes that you are missing on important information by filtering your results.&lt;/p&gt;

&lt;p&gt;Then we get to the thick of things where Duck Duck Go really starts to make a difference. While Google&amp;#8217;s search results are bland, Duck Duck go&amp;#8217;s search results are beautiful as well just like anywhere else on the site. One thing I particularly like about Duck Duck go is that it stores all your search preferences on the cloud instead of in your browser as cookies like Google does. This way, your search preferences remain in place(you only have to enter your passphrase) even if you decide to clear cookies on your browser.&lt;/p&gt;

&lt;p&gt;UI customizations are a dime-a-dozen. You can customize the colors in the results page, or simply select a color theme. Request WOT(web of trust) ratings for the website in the search. You can tell it to auto-load more search results as you scroll down the page, tell it whether your search should be passed using a GET request or a POST request !!!, change the widht of the search result display area, change fonts and font sizes, stop all ads from displaying in your result page, the list goes on and on&amp;#8230;&lt;/p&gt;

&lt;p&gt;If these customizations are not enough to get you interested, check out their &lt;a href='https://duckduckgo.com/goodies.html'&gt;search goodies&lt;/a&gt; page. Duck Duck go&amp;#8217;s search box allows you to do all sorts of mathematical calculations like finding the perimeter of triangles to unit conversions. You can also get the date of important events and find information about new movies. You can also find all sorts of recipes and geographical information about your location like time, weather. All this right from the search bar !!!. I am aware Google also provides such facilities for its users, but the good thing about Duck Duck go is that it allows commoners like you and me to suggest new features and if possible provide help implementing those. All these features are simply plugins that anyone can develop and submit to Duck Duck go.&lt;/p&gt;

&lt;p&gt;If this is not sufficient news for all you tech geeks out there, check out the mind blowing options on their &lt;a href='https://duckduckgo.com/tech.html'&gt;tech goodies&lt;/a&gt; page. You can generate super strong passwords, perform all sorts of mathematical calculations, find out rgb color codes, perform IP address calculations, get math formulae, find the hash codes of messages using hash algorithms like MD5, SHA.&lt;/p&gt;

&lt;p&gt;Perhaps the best features of all these is the !bang search syntax. It allows you to search directly from a websites internal search engine. For example, I find myself constantly searching 4shared for the latest paid android apps(actually their apk&amp;#8217;s) that I can download for free. With Duck Duck go, all I have to enter is &amp;#8220;!4shared swiftkeyx apk&amp;#8221; and I am taken directly to the search results on 4shared. There are a whole lot of sites(actually a gazillion more) for which this search technique can be applied and the entire list can be found &lt;a href='https://duckduckgo.com/bang.html'&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I am terribly impressed by this new duckling and has already made it to my browser&amp;#8217;s home page. I hope it does the same on your&amp;#8217;s too, because, Duck Duck Go, unlike Google is completely open source, and as always open source things rock !!! :). If you find Duck Duck Go impressive, and want to report some features I might have missed out(in the jubilation of completing the last exam of B.E !!!), please feel free to leave a comment below. :)&lt;/p&gt;</description>
</item>

<item>
<title>Black hat Hall Of Fame</title>
<link>http://varunbpatil.github.com/2012/06/06/black-hat-hackers</link>
<published>2012-06-06T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/06/black-hat-hackers</guid>
<description>&lt;p&gt;In this article I will be writing about few of the most notorious Black Hat hackers in the world. For those who don&amp;#8217;t know what Black Hat hackers means, they are those hackers with malicious intent as against White Hat hackers who hack mainly to expose security flaws to the developers. Here goes a list of the in-famous!!!&lt;/p&gt;

&lt;h4 id='jonathan_james'&gt;Jonathan James&lt;/h4&gt;

&lt;p&gt;This person tops the list of in-famous black hat hackers hands down. James was sent to juvenile prison at the age of 16 for installing backdoors on DoD(US dept. of defense) computers and stealing highly sensitive information regarding national security. James also cracked into NASA computers, stealing software worth approximately $1.7 million that included softwares critical to the operation of the ISS(international space station). In 2007, several high profile companies claimed that their networks were compromised and the police knew where to look for. James denied any involvement in these incidents, but his notoriety was such that he knew he would be convicted for crimes he did not commit and thus tragically took his own life in 2008. Sad ending to a computer wizard who at such a young age knew more than any of us could ever have known in our entire lives. :(&lt;/p&gt;

&lt;h4 id='kevin_mitnick'&gt;Kevin Mitnick&lt;/h4&gt;

&lt;p&gt;The most wanted computer criminal in United States&amp;#8217; history and the storyline behind two hollywood movies &amp;#8220;Freedom Downtime&amp;#8221; and &amp;#8220;Takedown&amp;#8221;. Mitnick currently owns and operates a computer security consulting agency called Mitnick Security Consulting, but not all was well before. He was sent to prison for hacking into DEC(Digital Equipment Corporation)&amp;#8217;s network. After release from prison, he went into hiding and went on a hacking spree that involved compromising the national defense warning system&amp;#8217;s and stealing corporate secrets. He ended up spending close to 5 years in solitary confinement. He later decided to mend his ways and use his expert skills for something more constructive, the result of which is quite evident today.&lt;/p&gt;

&lt;h4 id='albert_gonzalez'&gt;Albert Gonzalez&lt;/h4&gt;

&lt;p&gt;He entered the black hat hall of fame by stealing close to 170 million credit card details over a period of two years. He was also involved in fabrication of fraudulent passwords, health insurance cards and birth certificates for identity thefts that amounted to a staggering $4.3 million in stolen data. In 2010, he was sentenced to 20 years in prison.&lt;/p&gt;

&lt;h4 id='kevin_poulsen'&gt;Kevin Poulsen&lt;/h4&gt;

&lt;p&gt;Currently a top-notch journalist and a senior editor at Wired News, Kevin shot to fame by using his in-depth knowledge of telephone systems to hack into the telephone lines of LA radio(a popular radio station) and position himself as a winning caller in a competetion that won him a spanking new Porsche. In effect he had taken over all the telephone lines to the radio station to put himself into the hot seat. He then took his place on the FBI&amp;#8217;s most wanted list when he hacked into federal systems and stole wiretap information. After serving more than 5 years for his crimes, he decided to mend his ways much like Kevin Mitnick(even their names start with Kevin!!!. What a coincidence!!!). At one point in his reformed life, he even helped authorities nab 744 sex offenders just with their MySpace profiles. Not a bad ending after all. :)&lt;/p&gt;

&lt;h4 id='robert_tappan_morris'&gt;Robert Tappan Morris&lt;/h4&gt;

&lt;p&gt;Does the name sound familiar. It does indeed. He was the person who created the Morris worm, the first computer virus to be unleashed on the internet for which he became the first person to be prosecuted under the 1986 Computer Fraud and Abuse Act. What is unbelievable is that, he is the son of a NSA(National Security Agency) scientist Robert Morris. Even more unbelievable, Morris wrote the code for the worm while at Cornell University. The worm ultimately spread so far and wide and slowed down computers until they were unusable. But, Morris claimed that he only wanted to see how wide the internet was. He spent about 3 years in prison for this, but like a few others on this Hall of Fame, he decided use his talent towards something less incendiary. Morris is currently working as a professor at the MIT Computer Science and Artificial Intelligence Laboratory.&lt;/p&gt;

&lt;h4 id='nashon_evenchaim'&gt;Nashon Even-Chaim&lt;/h4&gt;

&lt;p&gt;Nahshon Even-Chaim ,aka Phoenix, was the first major computer hacker to be convicted in Australia. He was one of the most highly-skilled members of a computer hacking group called The Realm, based in Melbourne, Australia, from the late 1980s until his arrest by the Australian Federal Police in early 1990. His targets centred on defence and nuclear weapons research networks including NASA. He developed a reputation within The Realm, his computer hacking group, for skill and arrogance. The AFP(Australian Federal Police) installed wiretaps on his phone and modems. The data taps revealed Even-Chaim spent marathon sessions at his computer, working at a rapid pace to enter and tamper with computer systems. It was the first time in the world a remote data intercept had been used to gain evidence for a computer crime prosecution.&lt;/p&gt;

&lt;h4 id='adrian_lamo'&gt;Adrian Lamo&lt;/h4&gt;

&lt;p&gt;He shot to fame by breaking into major companies like New York Times, Microsoft Corporation by using internet connections at coffee shops and libraries to infiltrate these systems, which earned him the nickname of the &amp;#8220;homeless hacker&amp;#8221;. His other hits include Yahoo!, Bank of America, Citigroup and Cingular. He used to inform the respective companies of the security flaws in their systems after breaking into and exploiting them, but since he was not hired by any of these companies as penetration testers, what he did was illegal. After serving nearly 2 years, Adrian now works as an award-winning journalist and public speaker.&lt;/p&gt;
&lt;img width='750px' src='/images/Lamo-Mitnick-Poulsen.png' /&gt;
&lt;p&gt;Adrian Lamo, Kevin-Mitnick and Kevin Poulsen in reformed times :)&lt;/p&gt;</description>
</item>

<item>
<title>Behind the scene</title>
<link>http://varunbpatil.github.com/2012/06/02/behind-the-scene</link>
<published>2012-06-02T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/06/02/behind-the-scene</guid>
<description>&lt;p&gt;In this article I would like to completely share with you the details of how I created the website you are seeing right now.&lt;/p&gt;

&lt;h4 id='where_did_i_get_the_idea_and_inspiration_'&gt;Where did I get the idea and inspiration ?&lt;/h4&gt;

&lt;p&gt;The first time I heard about &lt;a href='https://github.com/mojombo/jekyll'&gt;Jekyll&lt;/a&gt; was on the &lt;a href='http://rkrishnan.org/about.html'&gt;about page&lt;/a&gt; of my mentor Ramkrishnan. Then while I started to dig out more information about it, I learnt about its close integration with &lt;a href='https://github.com/'&gt;Github&lt;/a&gt; and &lt;a href='http://pages.github.com/'&gt;Github pages&lt;/a&gt;. Ofcourse, it had to be since Jekyll was created by a person named &lt;a href='http://tom.preston-werner.com/'&gt;Tom Preston-Werner&lt;/a&gt; from Github. I had recently used Github pages to create a simple website for my 8th semester B.Tech project and liked the simplicity and beauty of it all. Then I happened to stumble upon a rich set of &lt;a href='https://www.google.co.in/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;ved=0CHAQ0gIoATAA&amp;amp;url=https%3A%2F%2Fgithub.com%2Fmojombo%2Fjekyll%2Fwiki%2FSites&amp;amp;ei=EG_KT_fxF4nsrAfQtOG0Dg&amp;amp;usg=AFQjCNGcwhnLKJ2b_VD5m-T6E42gVZVhvQ&amp;amp;sig2=6urBQOcD8OXhWJd5WQfkhw'&gt;sites&lt;/a&gt; implemented using jekyll and hosted on Github. I quickly stumbled through all the mentioned sites and decided to try and imitate &lt;a href='http://www.magpielab.com/'&gt;this site&lt;/a&gt;. Ofcourse, imitation is allowed since all the listed sites are free (Even my site is free to be used by anyone interested in building a quick website with no cost at all. I will tell you shortly how you can easily create your own site using my site&amp;#8217;s source code as a start point in no time at all). Quickly enough I got to work creating a rough outline for my new website. I also got a lot of implementation help about Jekyll and Liquid from &lt;a href='http://jekyllbootstrap.com/'&gt;jekyll-bootstrap&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id='what_programming_languages_were_used_'&gt;What programming languages were used ?&lt;/h4&gt;

&lt;p&gt;The core programming is done using HTML, CSS, &lt;a href='http://daringfireball.net/projects/markdown/basics'&gt;Markdown&lt;/a&gt; and &lt;a href='https://github.com/Shopify/liquid/wiki/Liquid-for-Designers'&gt;Liquid&lt;/a&gt;. Of course, you are free to use JavaScript, jQuery&amp;#8230; The way it is different from conventional web programming is that the entire site has to be organized in a structure that &lt;a href='https://github.com/mojombo/jekyll/wiki/usage'&gt;Jekyll&lt;/a&gt; expects to find. There are folders with pre-defined names into which you will have to put in your files so that Jekyll can locate them. Jekyll is simply a parser which takes Markdown, HTML, CSS, Liquid code and others and generates plain html files for you which you can then deploy on any web server. You can use Jekyll installed on your PC to build the site before you post it to your web-server or simply push the raw files into a repository on Github which then parses you raw code for you which means you don&amp;#8217;t have to have Jekyll on your PC. Nonetheless, it helps to have Jekyll installed on your machine to test your implementation instead of having to push your code to your Github repository every time you want to test something. Liquid allows fantastic reuse of code (templating) and also has constructs for variable assignment, looping, switch-case, conditional statements and a lot more that is not found in plain HTML. You can actually find all the help needed(all the help I used) in the links highlighted above. I will give links to a few more detailed tutorials shortly.&lt;/p&gt;

&lt;h4 id='other_shiny_new_bits_not_present_in_my_old_website_'&gt;Other shiny new bits (not present in my old website) !!!&lt;/h4&gt;

&lt;p&gt;I am very happy to report some exciting new features that I have succesfully integrated into this website that you can use and that were not found in my &lt;a href='http://varunpatil.xtreemhost.com/'&gt;earlier website&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can now look at my posts categorized by &lt;a href='http://varunbpatil.github.com/tag/'&gt;tags&lt;/a&gt; and also view an archive of all my previous posts.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;You can now subscribe to my blog posts to instantly get my blog posts on your favourite reader or you can even subscribe by mail where new posts I write get delivered to your mailbox everyday. Don&amp;#8217;t worry, your email id&amp;#8217;s and other subscription details are managed by professional programs like feedburner and thus there can be no misuse. You can find the subscription buttons on the bottom of every page in my website or you can simply click on the links below. &lt;ul&gt;
  &lt;li&gt;
      &lt;a href='http://feeds.feedburner.com/varunbpatil'&gt;subscribe via rss reader&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
      &lt;a href='http://feedburner.google.com/fb/a/mailverify?uri=varunbpatil&amp;loc=en_US'&gt;subscribe via email&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;I have also incorporated disqus comments into my blog posts where you are free to comment and provide feedback by logging into your favorite social networking site.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id='superb_quick_start_links'&gt;Superb quick start links&lt;/h4&gt;

&lt;p&gt;The following are some of the most useful quick start links I used to get my website up and running in no time at all.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://net.tutsplus.com/tutorials/other/building-static-sites-with-jekyll/'&gt;Building static sites with Jekyll&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://studiomohawk.github.com/jekyll-bootstrap/lessons/2011/12/29/jekyll-introduction/'&gt;JB Jekyll Introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, if there is anyway I can help you understand the technologies I have used or help you get started with your own website like mine, please to leave a comment below or better even, contact me using the links at the bottom of the page. The best way to get started is to download or fork the &lt;a href='https://github.com/varunbpatil/varunbpatil.github.com'&gt;source code&lt;/a&gt; for my website from Github and start experimenting with things. It won&amp;#8217;t take you long before you get into the groove. That&amp;#8217;s the way I learnt and that&amp;#8217;s the way I built this website, period. I hope I have aroused your interest in blogging and web designing through this short article. Any feedback regarding this site is much appreciated.&lt;/p&gt;</description>
</item>

<item>
<title>The ultimate Vim configuration</title>
<link>http://varunbpatil.github.com/2012/05/28/vim-config</link>
<published>2012-05-28T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/05/28/vim-config</guid>
<description>&lt;p&gt;Not long ago, I used notepad++ on windows and medit on Linux as my favorite text editor for hardcore programming. But then, during my brief internship at Cisco, I was coaxed into trying out vim (credits to my mentor &lt;a href='http://rkrishnan.org/'&gt;Ramkrishnan&lt;/a&gt; at Cisco). And the skills that my colleague&amp;#8217;s demonstrated while using vim further compelled me to try it out. After only about one month of forcing myself to use vim for all editing tasks, I found myself loving it more by the day. I have now reached a point where I can&amp;#8217;t live without vim.&lt;/p&gt;

&lt;p&gt;And today I found out about a project on Github which aims to develop the ultimate vim config file. A vim config file is the core of your vim experience where you control how vim behaves. A good vim configuration means a good vim experience. This project known as &lt;a href='http://vim.spf13.com/'&gt;spf13-vim&lt;/a&gt; is among the top 0.5% of projects on Github and it shows in the quality of the project web page itself and of course the usability of the vim configuration.&lt;/p&gt;

&lt;p&gt;Installation is as easy as downloading a single shell script and executing it (instructions are in the link above). The project has also integrated the greatest vim plugins ever that increase productivity to a great extent. Most importantly it is completely cross-platform and works the same whether you are on windows or Linux. It has all the best vim options set, provides the ability to customize the configuration, includes beautiful colorschemes, and a host of plugins like spell check and those that aid programmers like comments, directory trees, etc. With this, vim has turned into a full featured IDE much like eclipse and the like. I am simply loving it :)&lt;/p&gt;</description>
</item>

<item>
<title>Interesting last few months</title>
<link>http://varunbpatil.github.com/2012/05/26/last-few-months</link>
<published>2012-05-26T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/05/26/last-few-months</guid>
<description>&lt;p&gt;The last few months have been some of my best. Joined Cisco for an internship, immediately got the opportunity to work on Android. Completed my college project work with flying colors, won TCS best student award for topping my batch at college, enjoying a completely working ICS mod on my Motorola defy, completed the Cisco project on the last day of internship(with help ofcourse, lots of it !!!). Foolish of me to think that I can put all of it in one post, but here I am doing exactly the same.&lt;/p&gt;

&lt;p&gt;At Cisco, I had the opportunity of working with my mentor &lt;a href='http://rkrishnan.org/'&gt;Ramkrishnan&lt;/a&gt;. Even though it was for just 3 months, I learnt so many things from him &amp;#8211; gathered the courage to use vi(can&amp;#8217;t live without it now !!!), became fairly good at touch-typing(close to 40 wpm !!!), learnt a lot about git(I now use it for all my projects and this website as well), and ofcourse Android, adb and things of that sort that I now use very often to play around with my phone :) And ofcourse, I was able to complete the Cisco internship project just in time with a lot of his help particularly because I was so new to &lt;a href='http://gstreamer.freedesktop.org/'&gt;Gstreamer&lt;/a&gt; and Android. More on the project in a later post. Above all, one thing that I really liked about my mentor was his down-to-earth nature and ever-smiling face :). Hope I can learn more from him in the future.&lt;/p&gt;

&lt;p&gt;Even though I did not have much time to work on my college project since I was in Bangalore for 4 days a week, it really went well&amp;#8230; the presentation, demo and all. With all the heavy-lifting over, I still need to prepare some reports and formal papers on the project and I am already half way through. So no worries :-)&lt;/p&gt;

&lt;p&gt;And finally CM9 ICS by &lt;a href='http://forum.xda-developers.com/showthread.php?t=1353003'&gt;epsylon3&lt;/a&gt; has become stable enough on my Motorola defy to use everyday and it is kind of invigorating to have the latest and greatest android powering your phone :)&lt;/p&gt;</description>
</item>

<item>
<title>Tested : MIUI rom on Motorola Defy</title>
<link>http://varunbpatil.github.com/2012/01/15/miui-motorola-defy</link>
<published>2012-01-15T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/01/15/miui-motorola-defy</guid>
<description>&lt;p&gt;I have been using Cyanogenmod 7 (gingerbread) on my motorola defy for two months now and there was nothing more I wanted out of my phone&amp;#8230;that is until I laid my eyes on the &lt;a href='http://en.miui.com/'&gt;MIUI rom&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I decided to give it a try especially after I read that the MIUI rom runs more smoothly that CM7 on the motorola defy. Flashing the MIUI rom follows exactly the same procedure as flashing the CM7, only easier because, you don&amp;#8217;t need to flash google apps seperately like in CM7 because it is built into the MIUI rom. The MIUI rom is also based on Android Gingerbread 2.3.7 and is developed by Chinese developers using the cyanogenmod base. True to what they claim, MIUI provides the most beautiful UI of all custom ROM&amp;#8217;s. It has some elements of the Apple&amp;#8217;s iOS(which is undoubtedly beautiful) combined with stock android and is heavily customizable&amp;#8230;even more compared to the cyanogenmod ROM. And like in the CM7, my motorola defy is now automatically overclocked to 1GHz from the stock 800MHz. There is also virtually no lag in screen transition. Moreover MIUI can boast of an incredible in-built music app and an equally incredible social app and a wide array of community and fan developed themes. The camera app packs comparably fewer features than CM7, but is livable with for most of your photo shooting activities. I only hope they release an Android ICS version soon. :)&lt;/p&gt;

&lt;p&gt;The really fun thing about MIUI roms is that there are so many forks available. There is one called &lt;a href='http://miuiandroid.com/community/'&gt;MIUI Android&lt;/a&gt;, there is one called &lt;a href='http://www.miui.us/'&gt;MIUI U.S&lt;/a&gt;, then there is the MIUI Scotland or &lt;a href='http://miuiscotland.co.uk/site/'&gt;Galnet MIUI&lt;/a&gt; and many many more based on your region and language !!!&lt;/p&gt;</description>
</item>

<item>
<title>RSA encryption using Tcl</title>
<link>http://varunbpatil.github.com/2012/01/10/rsa-tcl</link>
<published>2012-01-10T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/01/10/rsa-tcl</guid>
<description>&lt;p&gt;After being placed in Cisco, I decided to learn some Tcl programming, which I heard from a couple of my friends, that it would help me in my workplace.&lt;/p&gt;

&lt;p&gt;Tcl is basically a scripting language like perl or python or shell programming and it is very easy to learn and use. Its cousin, the Tk language can be used to create GUI&amp;#8217;s whereas Tcl is mainly a command line language. The reason I decided to write an RSA encryption routine in Tcl is because the program involves and tests all major Tcl constructs from accessing files to performing mathematical computations and parsing text and thus is a very good example to test your Tcl skills. Coming to RSA, it is one of the best public-key cryptosystems available. Just in case, somebody wants to encrypt simple files on their computer, they can use my encryption program to do so :P. Of course, you will need to have Tcl interpreter installed on your computer&amp;#8230;.and know how to run the Tcl script :D which is hard work, I agree and much more complicated than some free software available on the market like KeePassX which is a billion times more easy to use and gazillion times more secure than my implementation, but nonetheless, I am very happy to give you my &lt;a href='http://www.mediafire.com/?csn6nc8jwr6mr5a'&gt;Tcl RSA implementation&lt;/a&gt; :D happy encrypting !!! The following lines show you how you may use my program to encrypt or decrypt files&amp;#8230;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make sure you have Tcl interpreter installed. Installing it is straightforward in Linux. You can find it in the Software repository. In ubuntu you can install it by typing the following in a terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ sudo apt-get install tcl&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;After downloading the &lt;a href='http://www.mediafire.com/?csn6nc8jwr6mr5a'&gt;Tcl script&lt;/a&gt; &amp;#8220;rsa.tcl&amp;#8221;, make sure it has execute permissions on your computer. To change the permissions in Ubuntu type the following in a terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ cd path_to_tcl_script
  $ chmod +x rsa.tcl&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Now you can run the script as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ cd path_to_tcl_script
  $ ./rsa.tcl&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Enter E(or e) to perform encryption and D(or d) to perform decryption.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;When prompted, please provide the complete(absolute) path to the file on your computer which you want to encrypt(or decrypt).&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Thats it&amp;#8230; You are done !!!. Happy Encrypting :D&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
</item>

<item>
<title>Stuxnet: the greatest, meanest computer virus ever written</title>
<link>http://varunbpatil.github.com/2012/01/04/stuxnet</link>
<published>2012-01-04T00:00:00+05:30</published>
<guid>http://varunbpatil.github.com/2012/01/04/stuxnet</guid>
<description>&lt;p&gt;Here is a detailed and &lt;a href='http://www.wired.com/threatlevel/2011/07/how-digital-detectives-deciphered-stuxnet/all/1'&gt;awe inspiring article&lt;/a&gt; by Wired news regarding the working of Stuxnet, possibly the greatest and most complex computer virus ever written. I will try to capture some of its essence in this article.&lt;/p&gt;

&lt;p&gt;Stuxnet was written to spread through USB devices and its main target was Siemens Step7 controllers running Microsoft&amp;#8217;s OS. These Seimens controllers are mainly used to control mechanical devices like motors, levers, valves,etc. and these were in heavy use at Iran&amp;#8217;s uranium enrichment facilities. Stuxnet is said to have infected over 50% of computers at these location before anyone knew something was wrong, and as a result Iran&amp;#8217;s nuclear weapon development program is claimed to have been setback by about 10 years. What is surprising is that Stuxnet is actually a very large program(about 5GB) as opposed to normal viruses which stretch into kilobytes, and the USA was the least affected by this virus even though the US is usually the most hit in other virus attacks. The Stuxnet virus was so organised that its developers could easily swap certain functions as required and update the malicious code easily. Whats more, it never stored Windwows API files(.dll) files in the hard disk as do conventional viruses, so that Anti virus softwares could never detect them. Stuxnet is of the &amp;#8216;zero-day&amp;#8217; variety, the most advanced of all viruses. Whats is more interesting is that Stuxnet never used the internet to infect in large numbers like a conventional virus. It was more content on spreading through local area networks which again showcase its single minded purpose of destabilizing Iran&amp;#8217;s nuclear project.&lt;/p&gt;

&lt;p&gt;Stuxnet gathered all working data from the Seimens controllers and passed it on to the attackers. The malicious .dll files would take the place of the good ones from microsoft and then intercept commands from the Siemens Step7 controller. It would then manipulate these commands before being sent to the controllers for the motors and valves controlling the centrifuge&amp;#8217;s used in the nuclear plant thus wrecking absolute havoc. Developing the Stuxnet code required knowledge of the Siemens Step7 Programmable logic controller which is infact proprietary information that only government agencies know further fueling the speculation that USA and its allies like Israel were behind the development of the super-virus.&lt;/p&gt;

&lt;p&gt;Symantec, the Antivirus giant usually spends not more than a couple of days deciphering conventional malware, but as the wired article expatiates, even after a month they had not been able to completely decipher Stuxnet&amp;#8217;s code. Malware writers usually modify registry values so that the malware they write does not infect their own machines. When the malware sees such values in the registry, it simply shuts down. One such registry value in Stuxnet resembled an important date in jewish history when a jewish business man was shot dead by the firing squad in Iran which served to add to the speculation that Israel might have been involved in Stuxnet&amp;#8217;s development. Infact, two Iranian nuclear scientists who disclosed some information about the damage that Stuxnet had caused were assasinated a few days after their disclosure. This article is the most fascinating read I have had in a long time. I hope you like it too.&lt;/p&gt;</description>
</item>

</channel>
</rss>
